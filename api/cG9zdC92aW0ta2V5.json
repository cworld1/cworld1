{"title":"Vim 的一些键位知识","date":"2023-12-15T19:00:02.000Z","date_formatted":{"ll":"2023年12月15日","L":"2023/12/15","MM-DD":"12-15"},"thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/vim-key/vim-featured-image.webp","color":"#8C68B7","link":"post/vim-key","comments":true,"tags":["Vim"],"categories":["Tutorials"],"updated":"2024-02-13T08:08:44.155Z","content":"<p>用了几年 Vim 有了一些心得，故有此文。</p>\n<span id=\"more\"></span>\n<p>从第一次尝试使用 Vim，到现在不管啥环境都要装个 Vim 插件，也差不多有两年多了。正如俗话所说“万事开头难”嘛，我和大多数的 Vim 初学者一样，也遇到了一段别扭且艰难的学习期。不过好在 Vim 已经让我尝到了一些甜头，这最终使我习惯并喜欢上了这套“反人类”的编辑逻辑。所以这一期就来总结一下 Vim 的一些键位知识，也可以当成教程学习学习。</p>\n<p>此外关于我个人的使用上，在用 NeoVim、VSCodeVim 以及 IdeaVim，三家都很好用。不过目前我还只打算开源 NeoVim 的配置，有兴趣的可以看看我的配置仓库：<a href=\"https://github.com/cworld1/nvim-config\" target=\"_blank\">CWorld NVim Config - Github</a></p>\n<h2 id=\"最基础的内容\">最基础的内容<a title=\"#最基础的内容\" href=\"#最基础的内容\"></a></h2>\n<h3 id=\"简单的光标移动\">简单的光标移动<a title=\"#简单的光标移动\" href=\"#简单的光标移动\"></a></h3>\n<p>首先是最基础的光标移动。你可能会发现基础的上下左右还能用，但请保持习惯，除了编辑模式下一般不要去碰它。</p>\n<ul>\n<li>上：k</li>\n<li>下：j</li>\n<li>左：h</li>\n<li>右：l</li>\n</ul>\n<p>食指作为更加灵活的那个手指，放在下移光标上，能够更频繁敏捷地持续下移光标。</p>\n<h3 id=\"简单的开始输入\">简单的开始输入<a title=\"#简单的开始输入\" href=\"#简单的开始输入\"></a></h3>\n<p>进入输入模式：</p>\n<ul>\n<li>向光标位置输入：i (insert mode)</li>\n<li>向光标后一个字符的位置输入：a (append)</li>\n<li>从这一行开头位置输入：I (insert at eol)</li>\n<li>从这一行末尾位置输入：A (append at eol)</li>\n<li>单独向下创建一行输入：o (open below)</li>\n<li>单独向上创建一行输入：O (open above)</li>\n</ul>\n<p>使用 Esc 退出该模式。</p>\n<h3 id=\"编辑器的常见操作\">编辑器的常见操作<a title=\"#编辑器的常见操作\" href=\"#编辑器的常见操作\"></a></h3>\n<ul>\n<li>删除一个字符：x (delete char)</li>\n<li>删除前一个字符：X (delete backspace)</li>\n<li>撤销：u (undo)</li>\n<li>返回撤销操作：c-r (redo)（意为 Ctrl + r，后同）</li>\n</ul>\n<h3 id=\"编辑器的文件基本操作\">编辑器的文件基本操作<a title=\"#编辑器的文件基本操作\" href=\"#编辑器的文件基本操作\"></a></h3>\n<ul>\n<li>\n<p>保存：:w</p>\n<blockquote>\n<p>强制保存：:w!</p>\n</blockquote>\n</li>\n<li>\n<p>退出当前窗口：:q</p>\n<blockquote>\n<ul>\n<li>强制退出：:q!</li>\n<li>退出所有窗口：:qa</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>这样的一个字符命令通常能够连在一起，比如：:wq、:qa!。输入完命令后记得按回车执行。</p>\n<h2 id=\"vim-进阶功能\">Vim 进阶功能<a title=\"#vim-进阶功能\" href=\"#vim-进阶功能\"></a></h2>\n<h3 id=\"更方便的光标移动\">更方便的光标移动<a title=\"#更方便的光标移动\" href=\"#更方便的光标移动\"></a></h3>\n<p>使用 w (next word) 或者 e (end word) 向后移动一个词语，其中 w 总是会移动到单词开头，e 总是移动到单词结尾。任何标点字符都会作为分割。b (prev word) 则可以以同样的方式前移。注意这个跳转能跨行。</p>\n<blockquote>\n<p>大写的对应按键也有奇效，但是一般不用，这里不展开。</p>\n</blockquote>\n<p>此外还有快速上下跳转空行：{ 和 } 。</p>\n<ul>\n<li>\n<p>前往行首：0 (“hard” bol)</p>\n</li>\n<li>\n<p>前往行第一个非空字符：^ (“soft” bol)（你也可以用 0 和 w 配合使用达到同样的效果）</p>\n</li>\n<li>\n<p>前往行末：$ (eol)</p>\n</li>\n<li>\n<p>重复执行以便快速移动：数字 + hjkl</p>\n<blockquote>\n<p>默认情况下侧栏的行号总是显示相对的，所以在跳转行时可以看一眼侧栏相对行号快速跳转。大多数 IDE 都支持这个设定。以 Vim 配置为例：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">number</span> relativenumber</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li>\n<p>下翻 1/2 页：c-d</p>\n</li>\n<li>\n<p>上翻 1/2 页：c-u</p>\n</li>\n<li>\n<p>下翻 1/1 页：c-f</p>\n</li>\n<li>\n<p>下翻 1/1 页：c-b</p>\n</li>\n<li>\n<p>前往整个内容顶部：gg</p>\n</li>\n<li>\n<p>前往整个内容底部：G</p>\n</li>\n</ul>\n<p>一个很方便的快捷键：</p>\n<ul>\n<li>将当前编辑行置于视图中间：zz</li>\n</ul>\n<p>还有个没啥用的：</p>\n<ul>\n<li>下滚动一行：c-e</li>\n<li>上滚动一行：c-y</li>\n</ul>\n<h3 id=\"快速地选择内容\">快速地选择内容<a title=\"#快速地选择内容\" href=\"#快速地选择内容\"></a></h3>\n<p>进入选择模式：</p>\n<ul>\n<li>\n<p>正常选择（Visual）：v</p>\n<blockquote>\n<p>按下时你就已经选择了当前的一个字母。</p>\n</blockquote>\n</li>\n<li>\n<p>行选择（Visual Line）：V</p>\n<blockquote>\n<p>按下时你就已经选择了该行。</p>\n</blockquote>\n</li>\n<li>\n<p>块选择（Visual Block）：c-v</p>\n</li>\n</ul>\n<p>使用 Esc 退出该模式。</p>\n<h3 id=\"更多样地选择内容\">更多样地选择内容<a title=\"#更多样地选择内容\" href=\"#更多样地选择内容\"></a></h3>\n<p>进入选择模式后：</p>\n<ul>\n<li>\n<p>选择单词（从光标到下一个符号/空格，包括符号）：w (word)</p>\n</li>\n<li>\n<p>选择当前单词：iw</p>\n</li>\n<li>\n<p>选择当前单词（包括下一个符号/空格）：aw</p>\n<blockquote>\n<p>同理，可将 w 换成别的，比如：</p>\n<ul>\n<li>大写单词 W (WORD)</li>\n<li>以逗号句号感叹号等收尾的句子：s (sentence)</li>\n<li>段落：p (paregraph)</li>\n<li>引号：&quot;、’</li>\n<li>括号：[]、() 等。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"修改内容\">修改内容<a title=\"#修改内容\" href=\"#修改内容\"></a></h3>\n<p>仅修改当前光标所在的这一个字符：r (replace mode)</p>\n<blockquote>\n<p>进阶玩法：配合选择模式，先选择内容，再使用 r，可以替换选择范围内的所有内容为新字符。</p>\n</blockquote>\n<p>一些必须要配合的命令：</p>\n<ul>\n<li>\n<p>修改选择内容并进入 insert 模式：c (change)</p>\n<blockquote>\n<p>可以先选择内容后使用，也可配合选择一起使用，如 ciw、cap、c3j 等。</p>\n<p>修改本行内光标后的所有内容可用 C</p>\n</blockquote>\n</li>\n<li>\n<p>删除选择内容：d（delete）</p>\n<blockquote>\n<p>使用方法同上，如 diw、cap 等。不过如果是先选择后删除的话，x 也是一样的（Vim 特色之都可以实现）。</p>\n<p>删除本行内光标后的所有内容可用 D</p>\n</blockquote>\n</li>\n<li>\n<p>复制选择内容：y (yank)</p>\n<blockquote>\n<p>复制本行也可以用 Y</p>\n</blockquote>\n</li>\n</ul>\n<p>此外还可以重复输入两次以便快速使用，效果为作用于该行整行，相当于 V + 对应命令。目前已知的命令包括：cc、dd、yy。</p>\n<ul>\n<li>当前位置后面粘贴内容：p (paste after)</li>\n<li>当前位置前面粘贴内容：P (paste before)</li>\n</ul>\n<blockquote>\n<p>通常是你在复制整行后，粘贴时注意粘贴位置在前或后会比较方便。</p>\n<p>当你选择了部分内容时，本次粘贴会覆盖选择内容（当然正常编辑器都是这样）。</p>\n</blockquote>\n<p>注意上述命令在修改、删除、替换粘贴时，均会将作用内容同时复制到你的剪贴板。这个剪贴板是独立于你的操作系统的，你可以通过下面的配置将其连接：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> clipboard+=unnamed</span><br></pre></td></tr></table></figure>\n<h2 id=\"vim-深入功能\">Vim 深入功能<a title=\"#vim-深入功能\" href=\"#vim-深入功能\"></a></h2>\n<h3 id=\"行内跳转\">行内跳转<a title=\"#行内跳转\" href=\"#行内跳转\"></a></h3>\n<ul>\n<li>跳转到行内下一个字符：f + 跳转字符 (find char)</li>\n<li>跳转到行内上一个字符：F + 跳转字符 (“back” find ch)</li>\n<li>跳转到行内下一个字符（但是光标往前挪一个）：r + 跳转字符 (find char)</li>\n<li>跳转到行内上一个字符（但是光标往后挪一个）：R (“back” find ch)</li>\n</ul>\n<p>可配合 c、d、y 命令。使用 ; 可以持续执行上面说的这个跳转操作，只要当前 buffer 没有被关闭就能一直保存跳转字符的记录，随时可用。而 , 则做相反方向的查找。</p>\n<h3 id=\"缩进\">缩进<a title=\"#缩进\" href=\"#缩进\"></a></h3>\n<ul>\n<li>向前缩进：&gt;&gt;</li>\n<li>向后缩进：&lt;&lt;</li>\n</ul>\n<p>也可以执行多次，如 &gt;3&gt;</p>\n<h3 id=\"查找替换\">查找替换<a title=\"#查找替换\" href=\"#查找替换\"></a></h3>\n<ul>\n<li>\n<p>向后优先查找内容：/ + 对应内容。输入回车后启用查找模式，使用 n (next) 或 N (prev) 跳转所有匹配项。</p>\n<blockquote>\n<p>一些相关的 Vim 配置：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&quot; Vim 会在您输入搜索模式的过程中逐步匹配并高亮显示匹配的文本。</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> incsearch</span><br><span class=\"line\"><span class=\"comment\">&quot; 在搜索时忽略大小写</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> ignorecase</span><br><span class=\"line\"><span class=\"comment\">&quot; 将搜索匹配的文本高亮显示</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> hlsearch</span><br></pre></td></tr></table></figure>\n<p>高亮显示匹配内容当然很棒！但是取消高亮命令 :nohl 就很不方便了。我一般的解决方案是：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;Esc&gt;</span> :nohl<span class=\"symbol\">&lt;CR&gt;</span></span><br></pre></td></tr></table></figure>\n<p>将这个命令映射到 Esc 键。</p>\n</blockquote>\n</li>\n<li>\n<p>向前优先查找内容：? + 对应内容</p>\n<blockquote>\n<p>快速查找或者跳转可以用 # (prev ident) 和 * (next ident)，快速查找该单词在上下文出现的位置。</p>\n</blockquote>\n</li>\n<li>\n<p>替换内容：：%s/ + 查找内容 + / + 替换内容 + /g</p>\n<blockquote>\n<p>替换可能会有点复杂，嫌弃的话建议多看看插件，有一些比较好的解决方案的。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"vim-特色实用小功能\">Vim 特色实用小功能<a title=\"#vim-特色实用小功能\" href=\"#vim-特色实用小功能\"></a></h3>\n<ul>\n<li>\n<p>跳转到指定行：: + 行号</p>\n<blockquote>\n<p>或者使用行号 + gg（Vim 特色之都可以实现）</p>\n</blockquote>\n</li>\n<li>\n<p>转置字母大小写：~</p>\n<blockquote>\n<p>也可以通过选择以后按 u 改为小写、U 改为大写实现（Vim 特色之都可以实现）</p>\n<p>也可以使用 g 这个转置，将 gu、gU 或者 g~ 与选择操作拼接起来。</p>\n</blockquote>\n</li>\n<li>\n<p>数字自增：c-a</p>\n</li>\n<li>\n<p>多光标：使用 c-v 进入 Visual Block 模式，将光标选中移动到指定位置后：</p>\n<ul>\n<li>同时插入：I</li>\n<li>同时追加：A</li>\n<li>同时编辑：c</li>\n<li>同时删除：d 或者 x</li>\n<li>同时修改为同一字符：r</li>\n<li>数字逐渐自增：先选中数字列，g，然后 c-a</li>\n</ul>\n</li>\n<li>\n<p>合并行，将下一行或者选中行通过空格连接，而不是回车：J (join)</p>\n<blockquote>\n<p>如果你不喜欢空格可以用 gJ 转置。</p>\n</blockquote>\n</li>\n<li>\n<p>关闭自动换行后的“行内”上下移动光标：gk、gj</p>\n</li>\n</ul>\n<h3 id=\"vim-特色实用大功能\">Vim 特色实用大功能<a title=\"#vim-特色实用大功能\" href=\"#vim-特色实用大功能\"></a></h3>\n<ul>\n<li>\n<p>标记：m + 自定义字母 (mark)</p>\n<p>之后使用 ` + 自定义字母跳转到标记</p>\n</li>\n<li>\n<p>宏录制：q + 自定义字母 (record macro)</p>\n<p>再按一次 q 结束。之后使用 @ + 自定义字母播放录制的操作宏</p>\n</li>\n</ul>\n<h2 id=\"最后的话\">最后的话<a title=\"#最后的话\" href=\"#最后的话\"></a></h2>\n<p>嗯… 文章有亿点长了。如果实在不喜欢记这些东西，并且真的感觉 Vim 很反人类的话，建议停止尝试。适合自己的才是最好的。</p>\n<p>最后给一个一图流链接吧，个人感觉这个写的还蛮不错的。</p>\n<p><a href=\"http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html\" target=\"_blank\">Graphical vi-vim Cheat Sheet and Tutorial</a></p>\n<p><img src=\"https://cdn.cbd.int/cworld-blog@latest/post/vim-key/vi-vim-cheat-sheet.png\" alt=\"vi-vim-cheat-sheet\" loading=\"lazy\" class=\"φbp\"></p>\n","next":{"title":"NodeJS 的一些相关技术","link":"post/nodejs"},"plink":"https://blog.cworld.top/post/vim-key/","toc":[{"id":"最基础的内容","title":"最基础的内容","index":"1","children":[{"id":"简单的光标移动","title":"简单的光标移动","index":"1.1"},{"id":"简单的开始输入","title":"简单的开始输入","index":"1.2"},{"id":"编辑器的常见操作","title":"编辑器的常见操作","index":"1.3"},{"id":"编辑器的文件基本操作","title":"编辑器的文件基本操作","index":"1.4"}]},{"id":"vim-进阶功能","title":"Vim 进阶功能","index":"2","children":[{"id":"更方便的光标移动","title":"更方便的光标移动","index":"2.1"},{"id":"快速地选择内容","title":"快速地选择内容","index":"2.2"},{"id":"更多样地选择内容","title":"更多样地选择内容","index":"2.3"},{"id":"修改内容","title":"修改内容","index":"2.4"}]},{"id":"vim-深入功能","title":"Vim 深入功能","index":"3","children":[{"id":"行内跳转","title":"行内跳转","index":"3.1"},{"id":"缩进","title":"缩进","index":"3.2"},{"id":"查找替换","title":"查找替换","index":"3.3"},{"id":"vim-特色实用小功能","title":"Vim 特色实用小功能","index":"3.4"},{"id":"vim-特色实用大功能","title":"Vim 特色实用大功能","index":"3.5"}]},{"id":"最后的话","title":"最后的话","index":"4"}],"reward":true,"copyright":{"updated":"2024年2月13日","author":"CWorld","link":"<a href=\"https://blog.cworld.top/post/vim-key/\" title=\"Vim 的一些键位知识\">https://blog.cworld.top/post/vim-key/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"2262 字约 15 分钟"}