[{"title":"Vim 的一些键位知识","date":"2023-12-15T19:00:02.000Z","date_formatted":{"ll":"2023年12月15日","L":"2023/12/15","MM-DD":"12-15"},"updated":"2024-02-13T08:08:44.155Z","content":"用了几年 Vim 有了一些心得，故有此文。\n\n从第一次尝试使用 Vim，到现在不管啥环境都要装个 Vim 插件，也差不多有两年多了。正如俗话所说“万事开头难”嘛，我和大多数的 Vim 初学者一样，也遇到了一段别扭且艰难的学习期。不过好在 Vim 已经让我尝到了一些甜头，这最终使我习惯并喜欢上了这套“反人类”的编辑逻辑。所以这一期就来总结一下 Vim 的一些键位知识，也可以当成教程学习学习。\n此外关于我个人的使用上，在用 NeoVim、VSCodeVim 以及 IdeaVim，三家都很好用。不过目前我还只打算开源 NeoVim 的配置，有兴趣的可以看看我的配置仓库：CWorld NVim Config - Github\n最基础的内容\n简单的光标移动\n首先是最基础的光标移动。你可能会发现基础的上下左右还能用，但请保持习惯，除了编辑模式下一般不要去碰它。\n\n上：k\n下：j\n左：h\n右：l\n\n食指作为更加灵活的那个手指，放在下移光标上，能够更频繁敏捷地持续下移光标。\n简单的开始输入\n进入输入模式：\n\n向光标位置输入：i (insert mode)\n向光标后一个字符的位置输入：a (append)\n从这一行开头位置输入：I (insert at eol)\n从这一行末尾位置输入：A (append at eol)\n单独向下创建一行输入：o (open below)\n单独向上创建一行输入：O (open above)\n\n使用 Esc 退出该模式。\n编辑器的常见操作\n\n删除一个字符：x (delete char)\n删除前一个字符：X (delete backspace)\n撤销：u (undo)\n返回撤销操作：c-r (redo)（意为 Ctrl + r，后同）\n\n编辑器的文件基本操作\n\n\n保存：:w\n\n强制保存：:w!\n\n\n\n退出当前窗口：:q\n\n\n强制退出：:q!\n退出所有窗口：:qa\n\n\n\n\n这样的一个字符命令通常能够连在一起，比如：:wq、:qa!。输入完命令后记得按回车执行。\nVim 进阶功能\n更方便的光标移动\n使用 w (next word) 或者 e (end word) 向后移动一个词语，其中 w 总是会移动到单词开头，e 总是移动到单词结尾。任何标点字符都会作为分割。b (prev word) 则可以以同样的方式前移。注意这个跳转能跨行。\n\n大写的对应按键也有奇效，但是一般不用，这里不展开。\n\n此外还有快速上下跳转空行：{ 和 } 。\n\n\n前往行首：0 (“hard” bol)\n\n\n前往行第一个非空字符：^ (“soft” bol)（你也可以用 0 和 w 配合使用达到同样的效果）\n\n\n前往行末：$ (eol)\n\n\n重复执行以便快速移动：数字 + hjkl\n\n默认情况下侧栏的行号总是显示相对的，所以在跳转行时可以看一眼侧栏相对行号快速跳转。大多数 IDE 都支持这个设定。以 Vim 配置为例：\n1set number relativenumber\n\n\n\n下翻 1/2 页：c-d\n\n\n上翻 1/2 页：c-u\n\n\n下翻 1/1 页：c-f\n\n\n下翻 1/1 页：c-b\n\n\n前往整个内容顶部：gg\n\n\n前往整个内容底部：G\n\n\n一个很方便的快捷键：\n\n将当前编辑行置于视图中间：zz\n\n还有个没啥用的：\n\n下滚动一行：c-e\n上滚动一行：c-y\n\n快速地选择内容\n进入选择模式：\n\n\n正常选择（Visual）：v\n\n按下时你就已经选择了当前的一个字母。\n\n\n\n行选择（Visual Line）：V\n\n按下时你就已经选择了该行。\n\n\n\n块选择（Visual Block）：c-v\n\n\n使用 Esc 退出该模式。\n更多样地选择内容\n进入选择模式后：\n\n\n选择单词（从光标到下一个符号/空格，包括符号）：w (word)\n\n\n选择当前单词：iw\n\n\n选择当前单词（包括下一个符号/空格）：aw\n\n同理，可将 w 换成别的，比如：\n\n大写单词 W (WORD)\n以逗号句号感叹号等收尾的句子：s (sentence)\n段落：p (paregraph)\n引号：&quot;、’\n括号：[]、() 等。\n\n\n\n\n修改内容\n仅修改当前光标所在的这一个字符：r (replace mode)\n\n进阶玩法：配合选择模式，先选择内容，再使用 r，可以替换选择范围内的所有内容为新字符。\n\n一些必须要配合的命令：\n\n\n修改选择内容并进入 insert 模式：c (change)\n\n可以先选择内容后使用，也可配合选择一起使用，如 ciw、cap、c3j 等。\n修改本行内光标后的所有内容可用 C\n\n\n\n删除选择内容：d（delete）\n\n使用方法同上，如 diw、cap 等。不过如果是先选择后删除的话，x 也是一样的（Vim 特色之都可以实现）。\n删除本行内光标后的所有内容可用 D\n\n\n\n复制选择内容：y (yank)\n\n复制本行也可以用 Y\n\n\n\n此外还可以重复输入两次以便快速使用，效果为作用于该行整行，相当于 V + 对应命令。目前已知的命令包括：cc、dd、yy。\n\n当前位置后面粘贴内容：p (paste after)\n当前位置前面粘贴内容：P (paste before)\n\n\n通常是你在复制整行后，粘贴时注意粘贴位置在前或后会比较方便。\n当你选择了部分内容时，本次粘贴会覆盖选择内容（当然正常编辑器都是这样）。\n\n注意上述命令在修改、删除、替换粘贴时，均会将作用内容同时复制到你的剪贴板。这个剪贴板是独立于你的操作系统的，你可以通过下面的配置将其连接：\n1set clipboard+=unnamed\nVim 深入功能\n行内跳转\n\n跳转到行内下一个字符：f + 跳转字符 (find char)\n跳转到行内上一个字符：F + 跳转字符 (“back” find ch)\n跳转到行内下一个字符（但是光标往前挪一个）：r + 跳转字符 (find char)\n跳转到行内上一个字符（但是光标往后挪一个）：R (“back” find ch)\n\n可配合 c、d、y 命令。使用 ; 可以持续执行上面说的这个跳转操作，只要当前 buffer 没有被关闭就能一直保存跳转字符的记录，随时可用。而 , 则做相反方向的查找。\n缩进\n\n向前缩进：&gt;&gt;\n向后缩进：&lt;&lt;\n\n也可以执行多次，如 &gt;3&gt;\n查找替换\n\n\n向后优先查找内容：/ + 对应内容。输入回车后启用查找模式，使用 n (next) 或 N (prev) 跳转所有匹配项。\n\n一些相关的 Vim 配置：\n123456&quot; Vim 会在您输入搜索模式的过程中逐步匹配并高亮显示匹配的文本。set incsearch&quot; 在搜索时忽略大小写set ignorecase&quot; 将搜索匹配的文本高亮显示set hlsearch\n高亮显示匹配内容当然很棒！但是取消高亮命令 :nohl 就很不方便了。我一般的解决方案是：\n1nnoremap &lt;Esc&gt; :nohl&lt;CR&gt;\n将这个命令映射到 Esc 键。\n\n\n\n向前优先查找内容：? + 对应内容\n\n快速查找或者跳转可以用 # (prev ident) 和 * (next ident)，快速查找该单词在上下文出现的位置。\n\n\n\n替换内容：：%s/ + 查找内容 + / + 替换内容 + /g\n\n替换可能会有点复杂，嫌弃的话建议多看看插件，有一些比较好的解决方案的。\n\n\n\nVim 特色实用小功能\n\n\n跳转到指定行：: + 行号\n\n或者使用行号 + gg（Vim 特色之都可以实现）\n\n\n\n转置字母大小写：~\n\n也可以通过选择以后按 u 改为小写、U 改为大写实现（Vim 特色之都可以实现）\n也可以使用 g 这个转置，将 gu、gU 或者 g~ 与选择操作拼接起来。\n\n\n\n数字自增：c-a\n\n\n多光标：使用 c-v 进入 Visual Block 模式，将光标选中移动到指定位置后：\n\n同时插入：I\n同时追加：A\n同时编辑：c\n同时删除：d 或者 x\n同时修改为同一字符：r\n数字逐渐自增：先选中数字列，g，然后 c-a\n\n\n\n合并行，将下一行或者选中行通过空格连接，而不是回车：J (join)\n\n如果你不喜欢空格可以用 gJ 转置。\n\n\n\n关闭自动换行后的“行内”上下移动光标：gk、gj\n\n\nVim 特色实用大功能\n\n\n标记：m + 自定义字母 (mark)\n之后使用 ` + 自定义字母跳转到标记\n\n\n宏录制：q + 自定义字母 (record macro)\n再按一次 q 结束。之后使用 @ + 自定义字母播放录制的操作宏\n\n\n最后的话\n嗯… 文章有亿点长了。如果实在不喜欢记这些东西，并且真的感觉 Vim 很反人类的话，建议停止尝试。适合自己的才是最好的。\n最后给一个一图流链接吧，个人感觉这个写的还蛮不错的。\nGraphical vi-vim Cheat Sheet and Tutorial\n\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/vim-key/vim-featured-image.webp","color":"#8C68B7","plink":"https://blog.cworld.top/post/vim-key/"},{"title":"NodeJS 的一些相关技术","date":"2023-07-19T13:24:36.000Z","date_formatted":{"ll":"2023年7月19日","L":"2023/07/19","MM-DD":"07-19"},"updated":"2024-02-13T08:08:44.115Z","content":"Node.js® is an open-source, cross-platform JavaScript runtime environment.\n\nnvm\n无论选择在 Windows 还是在 WSL 上安装，安装 Node.js 时还要作出其他选择。 建议使用版本管理器，因为版本变更速度非常快。 你可能需要根据所使用的不同项目的需求在多个版本的 Node.js 之间进行切换。 Node 版本管理器（通常称为 nvm）是安装多个版本的 Node.js 的最常见方法。 我们将演练安装 nvm 的步骤，然后使用它来安装 Node.js。\n安装 nvm\n要安装或更新 nvm，应运行安装脚本。为此，您可以手动下载并运行该脚本，或者使用以下 cURL 或 Wget 命令：\n1curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n1wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n运行上述任一命令都会下载并运行脚本。该脚本将 nvm 仓库克隆到 ~/.nvm，并尝试将以下代码片段中的源代码追加到正确的配置文件（~/.bash_profile、~/.zshc、~/.profile 或 ~/.bashrc）中。\n123export NVM_DIR=&quot;$HOME/.nvm&quot;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion\n\n验证 nvm\n使用命令：\n1command -v nvm\n或者，nvm -v 也许是个不错的检查方式。\n\n\n在 Linux 上，运行安装脚本后，如果您在键入 command -v nvm 后收到 nvm: command not found 或看不到来自终端的反馈，只需关闭当前终端，并重新打开新终端，然后再次尝试验证即可。 或者，您可以在命令行上为不同的 shell 运行以下命令：\n\nbash: source ~/.bashrc\nzsh: source ~/.zshrc\nksh: . ~/.profile\n\n嗯…希望你能看懂我在说什么。\n\nnvm 用法\n想要下载、编译和安装最新版本的 node，你可以直接执行：\n12nvm install node # &quot;node&quot; is an alias for the latest versionnvm install --lts # 使用 LTS 版本更适合生产应用程序，避免问题\n安装一个特定版本的 node：\n1nvm install 14.7.0 # or 16.3.0, 12.22.1, etc\n你安装的第一个版本会被设置为默认版本。所有新的终端将使用默认版本的 node 作为起始。你也可以使用 nvm default v18.13.0 切换。卸载对应版本请使用：\n1nvm uninstall --version 18.13.0\n使用命令 ls-remote 会列出所有 nvm 能够提供的 node 版本。列表会比较长，你可以使用 vxx 关键字简单过滤：\n1nvm ls-remote v18\n然后在任何新的 shell 里使用安装的版本：\n12nvm use nodenvm use v18.13.0\n或者单纯一次性的使用某个版本运行一下：\n1nvm run node --version\n以及别忘了 which 命令：\n1nvm which 12.22\n\n移除 nvm\nnvm 固然好用，但接下来讲的另外一个工具也许能让你怦然心动，恰巧是 nvm 的优秀替代品。如果你需要换到接下来的工具或者其他工具，也可尝试移除 nvm。\n首先移除整个库（也就是之前提到的 .nvm）：\n1rm -rf &quot;$NVM_DIR&quot;\n然后前往你的配置文件（也就是之前提到的如 .zshrc 文件），移除对应的环境变量声明文本（大概长下边这样）：\n123export NVM_DIR=&quot;$HOME/.nvm&quot;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm[[ -r $NVM_DIR/bash_completion ]] &amp;&amp; \\. $NVM_DIR/bash_completion\nfnm\nfnm（Fast Node Manager）基于 Rust 开发，是不是还没用就感觉到它的快了，哈哈~\n同时，它是跨平台的，支持 macOS、Linux、Windows。\n安装\n1curl -fsSL https://fnm.vercel.app/install | bash\n如果你像笔者这样报错的话，可能是缺失了 unzip，直接安装一下即可：\n1sudo apt-get install unzip\n\n验证 fnm\n1234command -v fnm# 或者使用这一句fnm --version\nfnm 用法\nQuick start：\n123456789# 1. 安装最新的 LTS 版本fnm install --lts# Installing Node v18.13.0 (arm64)# 2. 设置为全局默认版本fnm default 18# 3. 尽情使用吧～node -v\n\n一些常用指令：\n1234567891011121314# 安装其他版本$ fnm install 16# 在当前 Shell 使用指定版本$ fnm use 16# 查看本地已安装的版本$ fnm ls# 查看官方已发布的所有版本$ fnm ls-remote | grep v16# 速度慢的时候，可以切换到国内源$ fnm install 16 --node-dist-mirror=https://npmmirror.com/mirrors/node\n","plink":"https://blog.cworld.top/post/nodejs/"},{"title":"ChatGPT 深度使用与日用方案","date":"2023-03-27T14:07:32.000Z","date_formatted":{"ll":"2023年3月27日","L":"2023/03/27","MM-DD":"03-27"},"updated":"2024-02-13T08:08:44.055Z","content":"前置准备\nChatGPT 是一个基于 GPT-3.5-turbo 的聊天机器人，它可以通过简单的 API 调用来实现与人类的对话。\n关于如何注册 OPENAI，网上的方法已经很多了，这里不再赘述。这里简单讲解一下如何拿到 ChatGPT 的 API。\n在 ChatGPT 上注册成功账号后，在 API 页面中，点击 Get API Key 按钮，即可获得你的 API Key。\n\n其他办法\n继续深入讲解如何利用你的 API Key 前，先简单讲述一下其他方法：\n通过网站：\n\nBAI Chat 就是一个干净免费的网站，完全可以直接使用，并且具备速通能力。\nKliuu ChatGPT 是一个个人搭建的版本，同样有速通能力，但被限制最多输入 30 字符，最多回复 220 字符。\n\n通过 Telegram：\n\nBAI 就是上边提到的 BAI Chat 的 Telegram 版本，速度还算快，体验不错。\nBAI White BAI Chat 的镜像版本。\nChatGPT OpenAI Bot 甚至提供语音发送回复，但有 10 秒冷却（等于没有）。\n\nChatGPT 与 Telegram\n如果你对隐私、速度、安全或者单纯自定义有一定的要求，可以尝试自己搭建 Telegram 机器人，拥有更多的灵活度和更快的响应。更多信息详见 Github 项目 TBXark/ChatGPT-Telegram-Workers，下面也简单讲解一下部署流程。\n\n\n创建 Telegram 机器人\n首先，你需要一个 Telegram 账号，然后在 BotFather 上创建一个机器人，按照提示操作即可。\n\n\n部署 Workers\n\n在 Cloudflare Workers 上注册账号\n点击右上角的 Create a Service\n进入新建的 workers，选择 Quick Edit，将 …/dist/index.js 代码复制到编辑器中，保存。\n\n\n\n\n配置环境变量\n前往你的 Workers,点击右上角的 Setting -&gt; Variables，设置下述变量。\n\n带 * 的为必设置，带 ^ 的为推荐设置\n\n\n\n变量名\n简述\n默认值\n特殊说明\n\n\n\n\n*API_KEY\nOpenAI API Key\nnull\n\n\n\n*TELEGRAM_AVAILABLE_TOKENS\n支持多个 Telegram Bot Token\nnull\n多个 Token 用,分隔\n\n\n*CHAT_WHITE_LIST\n聊天 ID 白名单\nnull\n多个 ID 用,分隔，不知道 ID，和机器人聊一句就能返回\n\n\nI_AM_A_GENEROUS_PERSON\n关闭白名单，允许所有人访问\nfalse\n鉴于很多人不想设置白名单，或者不知道怎么获取 ID，所以设置这个选项就能允许所有人访问， 值为true时生效\n\n\nAUTO_TRIM_HISTORY\n自动清理历史记录\ntrue\n为了避免 4096 字符限制，将消息删减\n\n\nMAX_HISTORY_LENGTH\n最大历史记录长度\n20\nAUTO_TRIM_HISTORY开启后 为了避免 4096 字符限制，将消息删减\n\n\nCHAT_MODEL\nopen ai 模型选择\ngpt-3.5-turbo\n\n\n\nSYSTEM_INIT_MESSAGE\n系统初始化信息\n你是一个得力的助手\n默认机器人设定\n\n\nSYSTEM_INIT_MESSAGE_ROLE\n系统初始化信息角色\nsystem\n默认机器人设定\n\n\n^ENABLE_USAGE_STATISTICS\n开启使用统计\nfalse\n开启后，每次调用 API 都会记录到 KV，可以通过/usage查看\n\n\nHIDE_COMMAND_BUTTONS\n隐藏指令按钮\nnull\n把想要隐藏的按钮写入用逗号分开/start,/system, 记得带上斜杠,修改之后得重新init\n\n\nDEBUG_MODE\n调试模式\nfalse\n目前可以把最新一条消息保存到 KV 方便调试\n\n\n*WORKERS_DOMAIN\nWorkers 域名\nnull\n例如 workers_name.username.workers.dev\n\n\n\n\n配置 KV 数据库\n\n前往侧栏的 Workers -&gt; KV，点击右上角的 Create a Namespace, 名字随便取, 但是绑定的时候必须设定为DATABASE\n点击右上角的 Setting -&gt; Variables\n在 KV Namespace Bindings 中点击 Edit variables\n点击 Add variable\n设置名字为DATABASE 并选择刚刚创建的 KV 数据\n\n\n\n初始化\n\n运行 https://workers_name.username.workers.dev/init 自动绑定 telegram 的 webhook 和设定所有指令\n开始新对话,使用/new指令开始,之后每次都会将聊天上下文发送到 ChatGPT\n使用/setenv KEY=VALUE指令修改用户配置,例如SETENV SYSTEM_INIT_MESSAGE=现在开始是喵娘,每句话已喵结尾\n使用 /role 角色名 SYSTEM_INIT_MESSAGE=现在开始是猫娘，每句话以喵结尾 可以创建一个新角色，并使用 ~角色名 聊天内容 调用。\n\n\n\nChatGPT 与 AMA\nAMA（Ask Me Anything）原本指一种在线问答形式，这里只是一个 ChatGPT 第三方客户端，支持 Android 和 iOS。\n\nAndroid: Google Play Store\niOS: App Store\n\n如果你还想获得速通能力，可以尝试自己设置 API Server（原理就是反代官方 API 接口）（感谢 sfc9982’s blog 提供的思路）。\n与上文相同，你需要在 Cloudflare Workers 上部署一个 Worker。相关注册等流程上文讲过这里不再赘述。\n\n\n注意部署内容有发生改变，你需要填入以下内容：\n12345678910111213141516171819202122232425const TELEGRAPH_URL = &quot;https://api.openai.com&quot;;addEventListener(&quot;fetch&quot;, (event) =&gt; &#123;  event.respondWith(handleRequest(event.request));&#125;);async function handleRequest(request) &#123;  const url = new URL(request.url);  url.host = TELEGRAPH_URL.replace(/^https?:\\/\\//, &quot;&quot;);  const modifiedRequest = new Request(url.toString(), &#123;    headers: request.headers,    method: request.method,    body: request.body,    redirect: &quot;follow&quot;,  &#125;);  const response = await fetch(modifiedRequest);  const modifiedResponse = new Response(response.body, response);  // 添加允许跨域访问的响应头  modifiedResponse.headers.set(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);  return modifiedResponse;&#125;\n\n\n点击编辑器右下角的 “Save and deploy” 按钮部署该代码，在弹出的对话框中继续选择 “Save and deploy” 确认部署。\n\n\n在 Cloudflare Workers 的管理界面中，点击 “Triggers” 选项卡，然后点击 “Custom Domians” 中的 “Add Custom Domain” 按钮以绑定自己的域名（为的是防止免费提供的域名本身被拒绝速通，如果你能用也可以不设置）。\n\n\n测试：将官方的 https://api.openai.com/v1/chat/completions 换为自己的域名（如 https://mydomain.com/v1/chat/completions ），如果打开收到结果如：\n12345678&#123;  &quot;error&quot;: &#123;    &quot;message&quot;: &quot;You didn&#x27;t provide an API key. You need to provide your API key in an Authorization header using Bearer auth (i.e. Authorization: Bearer YOUR_KEY), or as the password field (with blank username) if you&#x27;re accessing the API from your browser and are prompted for a username and password. You can obtain an API key from https://platform.openai.com/account/api-keys.&quot;,    &quot;type&quot;: &quot;invalid_request_error&quot;,    &quot;param&quot;: null,    &quot;code&quot;: null  &#125;&#125;\n说明你部署反代成功。只需填入 AMA 的设置中的 API Server 即可。\n\n\nChatGPT 与 PureWriter\nPureWriter 中文名纯纯写作，是一款优秀的写作工具，支持 Windows、Android 平台（但 Windows 功能比较残缺），这里以 Android 版（也只有这个支持）为例。\n下载：Pure Writer 官网\n在设置中可输入 ChatGPT 的 API Key 即可快速启用。注意纯纯写作不支持自定义 API Server，没有办法速通。\n\n除了 “时光机” 界面外，还能在打字界面调用，有效提升写作效率。当然你也可以单纯当作一款 ChatGPT 客户端。\n","plink":"https://blog.cworld.top/post/chatgpt/"},{"title":"Alist 自建0成本部署","date":"2022-12-15T02:06:47.000Z","date_formatted":{"ll":"2022年12月15日","L":"2022/12/15","MM-DD":"12-15"},"updated":"2024-02-13T08:08:44.059Z","content":"Alist 是一款支持多种存储的目录文件列表程序，后端基于 gin，前端使用 react。\n\n这里提供 Alist 官方的传送门：Github | Demo | 文档\n不过本节将重点讨论使用 Render 部署 Alist 的方法。\nFork 仓库\n首先，我们需要 Fork 一份 Alist-render 的仓库。（不会的自己使用搜索引擎）\nAlist 仓库地址：Github\n修改配置\n前往 fork 的仓库，修改 render.yaml 内的 repo 配置为自己的仓库地址。\n创建数据库\nAlist 需要一个数据库，可选 sqlite3、mysql、postgres。这里选用提供免费服务的 ElephantSQL。\n进入官网：ElephantSQL，点击位于页面中央的 Get a managed database today\n\n选择海龟样子的 Free 计划\n\n会进入登陆页面，可以使用 Github 进行授权登陆。之后会来到控制台，我们选择绿色的 Create New Instance 创建一个新的数据库。名称和 Tag 随意填写，方案是默认的 Free 方案。\n\n接下来的地区可以随意选择，优先选择高亮的地区；如我选的 AP-East-1 (Hong Kong)。这样我们就获得了一个免费的 postgres 类型的数据库。注意详情页的如下配置，后面会用到。\n\nRender 部署\n进入官网：Render，点击右上角的 GET STARTED 注册账号。\n注册完成后，点击右上角的 New +，选择 Web Service，并在授权 Github 时连接刚刚 Fork 的 Alist 仓库。\n\n下一步先随便取个名字，然后拉到底部点击 Advanced，录入需要的环境变量。\n\n\n\n变量参数\n示例参数\n数据库详情页对应\n说明\n\n\n\n\nDB_HOST\nqueenie.db.elephantsql.com\nServer\n数据库地址\n\n\nDB_NAME\nbkqgx\nUser &amp; Default database\n数据库名字\n\n\nDB_PASS\n5CqBjEVZWdaaad2333aadadadadN3Clo\nPassword\n数据库密码\n\n\nDB_PORT\n5432\n\n数据库端口\n\n\nDB_SSL_MODE\ndisable\n\nSSL 模式\n\n\nDB_TYPE\npostgres\n\n数据库类型\n\n\nDB_USER\nbkqgx\nUser &amp; Default database\n数据库用户名\n\n\nPORT\n8080\n\n端口\n\n\n关于 DB_SSL_MODE用于给数据连接提供 SSL 加密保护。其中：\n\nsqlite3 数据库：请忽略该参数\nmysql 数据库：参数有 true, false, skip-verify, preferred, 选一个填\npostgres 数据库：参数有 disable，allow，prefer，require，verify-full，选一个填\n\n我用的 postgres 数据库填的是 disable，也就是没用 SSL；大家按需选择即可。\n注：为了提升访问速度，建议额外配置环境变量 CDN 为 https://npm.elemecdn.com/alist-web@【NPM官网查到的最新版本号】/dist/，能一定程度上加快网页打开速度。\n保持唤醒\n由于 Render 15 分钟没访问会休眠，所以我们可以注册一个 Uptimerobot 或 Checklyhq 类似的这种监视网站，添加一个监控，24 小时定时访问 render 上的项目，render 就不会休眠了。\n\nRender 原本的免费计划是每月允许总共使用 750 小时，似乎是不计流量的，就部署一个项目来说完全够用。但是 render 官方宣布定价将从 2023 年 1 月 1 日开始更改，从每月使用 750 小时，改为了每月免费带宽 100GB 的流量。\n\n问题解决\n由于搭建的人开始变多，Render 官方也开始对 Alist 项目进行限制，导致部分人无法正常部署。解决方案：\n\n修改自己的仓库名，避免出现 Alist 字眼；\n将 render.yaml 中的 repo 配置为自己的仓库地址。\n\n最后感谢 檐牙 提供的参考。\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/deploy-alist/thumbnail.jpg","color":"#2f76d7","plink":"https://blog.cworld.top/post/deploy-alist/"},{"title":"米哈游游戏（原神/崩坏3）自动签到","date":"2022-04-17T17:10:14.000Z","date_formatted":{"ll":"2022年4月17日","L":"2022/04/17","MM-DD":"04-17"},"updated":"2024-02-13T08:08:44.111Z","content":"这是一个关于 原神签到小助手 的指导教程。\n\n写这个文档，是因为开发者自己写的文档太乱了。我也花了很长时间才彻底看懂。。\n项目相关\n\ngenshinhelper 从 v2.0.0 开始，分为 genshinhelper2 和 genshin-checkin-helper 两个项目，同时分离出 onepush 推送包。\n\n前言\n原神是少有的游戏本体和签到福利分离的游戏，玩家为了签到还要额外下载米游社 App。\n平心而论，目前的每日签到奖励真的不咋地，都知道是蚊子腿。事实上，你完全可以选择无视签到，不签也没啥大的损失；或者选择手动签到，但这样的话哪天忘记打卡了就很头疼。\n为了原石、摩拉和紫色经验书等签到奖励，这个项目应运而生，可以实现自动每日签到。\n简介\ngenshinhelper（原神签到小助手），前身为 genshin-impact-helper，可以自动化为你获取原神每日福利。\n功能支持\n\n支持订阅推送\n支持多个账号以及一个账号下的多个角色\n米游社原神/崩坏 3 的每日签到\n米游社的米游币获取任务\n原神超话功能 活动监测 + 领兑换码 + 多方推送\n支持原神多种服务器（天空岛/世界树/America/Europe/Asia/SAR）\n原神微信积分商城签到\n云原神时长活动签到\n\n源码\n\n\ngenshinhelper2（Github | Gitlab）- 签到相关的封装库，不能开箱即用。\n\n\ngenshin-checkin-helper - 签到主程序。\n\n\nonepush - 一个简单易用的推送包。\n\n\n运行方式与环境搭建\n\n方案 1 终端运行终端运行 genshinhelper or python -m genshinhelper可以直接运行签到脚本。\n方案 2 云函数运行（推荐）\n注意：v1.5.0+ 版本增加了随机延迟功能，默认为 10-300s。故云函数的执行超时时间应设置为大于变量中的 MAX_SLEEP_SECS（最大休眠秒数）。\n\n这里以腾讯云函数为例。阿里云方法类似。\n云函数版文件下载 密码：ed03\n前往 云函数 SCF 管理控制台 --&gt;函数服务–&gt;新建–&gt;自定义创建–&gt;基础配置–&gt;本地上传zip包–&gt;上传–&gt;本地上传zip包–&gt; 选择下载的genshinhelper-xxx-serverless.zip压缩包–&gt;完成\n\n前往genshinhelper–&gt;函数管理–&gt;函数配置–&gt;编辑\n\n此处可以编辑环境变量。同时建议修改执行超时时间为600秒。\n\n前往genshinhelper–&gt;触发管理–&gt;新建触发器–&gt; 按下图进行配置。当然你也可以添加一个 API 网关，方便手动强制执行。\n\n方案 3 Docker 运行使用以下命令拉取镜像：\n1docker pull yindan/genshinhelper\n你也可以在 Docker Hub 上找到该仓库。\n在下列命令中， COOKIE_MIHOYOBBS 代表环境变量名字， &lt;COOKIE_MIHOYOBBS&gt; 代表 COOKIE_MIHOYOBBS 对应的值；DISCORD_WEBHOOK 同理。\n\n应当注意，这里的 COOKIE_MIHOYOBBS和 DISCORD_WEBHOOK只是教程使用的例子，并非必须字段。\n如果你是国际服则应该配置 COOKIE_HOYOLAB而不是 COOKIE_MIHOYOBBS；不使用 Discord 推送，可以不配置 DISCORD_WEBHOOK。\n\n\n基本使用\n\n12345docker run -d --name=genshinhelper \\-e COOKIE_MIHOYOBBS=&quot;&lt;COOKIE_MIHOYOBBS&gt;&quot; \\-e DISCORD_WEBHOOK=&quot;&lt;DISCORD_WEBHOOK&gt;&quot; \\--restart always \\yindan/genshinhelper:latest\n\n高级使用\n\nDocker 会在每天早上 6:00 触发签到任务。可以使用 CRON_SIGNIN 参数自定义触发时间。\n例如触发时间使用的是北京时间：\n123456docker run -d --name=genshinhelper \\-e COOKIE_MIHOYOBBS=&quot;&lt;COOKIE_MIHOYOBBS&gt;&quot; \\-e DISCORD_WEBHOOK=&quot;&lt;DISCORD_WEBHOOK&gt;&quot; \\-e CRON_SIGNIN=&quot;0 7 * * *&quot; \\--restart always \\yindan/genshinhelper:latest\n如果你想使用 config.json 配置文件（这部分会在 配置章节讲解），则可以使用以下命令映射文件夹。\n假设你的配置文件位于 /etc/genshin/config.json。\n1234docker run -d --name=genshinhelper \\-v /etc/genshin:/app/genshincheckinhelper/config \\--restart always \\yindan/genshinhelper:latest\n\n常用命令\n\n1234567891011121314# 查看日志$ docker logs -f genshinhelper --tail 100# 重启$ docker restart genshinhelper# 更新$ docker pull yindan/genshinhelper$ docker rm -f genshinhelper# 之后依据基本使用或高级使用重新部署# 卸载$ docker rm -f genshinhelper$ docker image rm genshinhelper\n方案 4 使用 PyPI Package 运行使用 pypi 包 进行安装：\n1pip install genshinhelper\n你需要先在主机中添加环境变量，或者使用 pip show genshinhelper 查看包的安装位置，找到并编辑 config.json 配置文件。\n如果你已经完成前置要求，使用以下命令运行项目:\n1python -m genshinhelper\n配置与操作\n配置项\n其实就是云函数里面的环境变量或者其他方式下的 Config 文件。\n下面的配置项并非每一项都要填写，根据需要填即可。\n\n\n变量名\n默认值\n描述\n\n\n\n\nLANGUAGE\nen\n项目语言。目前支持中文(zh)和英文(en)。\n\n\nMAX_SLEEP_SECS\n300\n最大休眠秒数。自 v1.5.0 添加了运行前随机延迟，设置此参数可自定义延迟，秒数应该＞ 10\n\n\nRANDOM_SLEEP_SECS_RANGE\n0-300\n随机延迟休眠秒数范围。设置成&quot;0-0&quot;为取消延迟\n\n\nRUN_ENV\nprod\n是否延迟执行。设置为任意非默认值即可跳过随机延迟\n\n\nCHECK_IN_TIME\n\n（云函数无需配置此项）每日签到时间，只运行环境的时间有关。对于 Docker 可以用 TZ=Asia/Shanghai 设置时区\n\n\nCHECK_RESIN_SECS\n\n（云函数无需配置此项）原神原粹树脂检测间隔秒数\n\n\nONE_PUSH\n\n设置消息推送\n\n\nCOOKIE_MIHOYOBBS\n\n米游社里原神签到需要的 Cookie 值\n\n\nCOOKIE_BH3\n\n崩坏 3 签到需要的 Cookie 值\n\n\nCOOKIE_MIYOUBI\n\n米游社执行任务获取米游币需要的 Cookie 值\n\n\nCOOKIE_HOYOLAB\n\nHoYoLAB 里原神签到需要的 Cookie 值\n\n\nCOOKIE_WEIBO\n\n微博超话自动签到需要的 Cookie 值，形如 aid=xxx;gsid=xxx;s=xxx;from=xxx\n\n\nCOOKIE_KA\n\n超话活动追踪\\获取兑换码需要的 Cookie 值，形如 SUB=xxx;SUBP=xxx\n\n\nCLOUD_GENSHIN\n\n云原神签到得时长需要的 Cookie 值\n\n\nCOOKIE_RESIN_TIMER\n\n原神原粹树脂检测需要的 Cookie 值\n\n\nSHOPTOKEN\n\n原神微信积分商城的 token 值（通过抓包获取）\n\n\n\nCookie 相关配置项都可以填写多个账号。不同账号的 Cookie 值之间用#分隔，如：cookie1#cookie2#cookie3\n\n配置文件\n对于云函数就是环境变量，所以无需配置文件。\n例如只配置原神签到福利和 Discord 推送，那么配置文件除了保持完整也可以写成：\n1234&#123;  &quot;COOKIE_MIHOYOBBS&quot;: &quot;&quot;,  &quot;DISCORD_WEBHOOK&quot;: &quot;&quot;&#125;\n获取 Cookie\n你可以通过书签法执行 JS 代码。\nJS 代码如下：\n12345javascript: (function () &#123;  let domain = document.domain;  let cookie = document.cookie;  prompt(&quot;Cookies: &quot; + domain, cookie);&#125;)();\n你可以直接在开发者工具的 Console 面板直接粘贴运行，也可以将下面的链接收藏为书签（电脑拖拽到书签栏，手机需要手动添加）：\n获取 Cookie\n签到相关详解\n原神、崩坏 3、米游社签到\n对于 COOKIE_MIHOYOBBS、COOKIE_BH3、COOKIE_MIYOUBI 的 Cookie 值抓取，都可以直接前往米游社网站 https://bbs.mihoyo.com/ys/ 或 https://bbs.mihoyo.com/bh3/。\n如果是 HoYoLAB，请前往 https://webstatic-sea.mihoyo.com/ys/event/signin-sea/index.html?act_id=e202102251931481&amp;lang=en-us 页面抓取并填入 COOKIE_HOYOLAB。\n\n上述 Cookie 应包含 account_id 和 cookie_token 两个字段。如果没有，建议使用浏览器的无痕/访客/隐私模式重新登陆访问。\n\n微博超话签到\nCOOKIE_WEIBO 参数需要在 微博国际版 APP 内抓包取得。抓包时使用微博的搜索功能就能轻松获得相应请求，但请注意抓包地址为 https。\n地址形如：https://api.weibo.cn/2/xxxxxx?aid=xxx&amp;c=weicoabroad&amp;from=123&amp;gsid=_xxx&amp;i=xxx&amp;lang=zh_CN&amp;s=xxx&amp;ua=iPhone12%2C1_iOS14.0.1_Weibo_intl._4330_cell&amp;v_p=59\n在抓包结果请求头（地址 query 参数）里提取出 aid、s、gsid 和 from 参数，组合成形如 &quot;aid=xxx; s=xxx;gsid=xxx;from=xxx&quot;的形式填入。\nCOOKIE_KA 用来追踪超话活动和自动提取兑换码。事实上会在抓取 COOKIE_WEIBO 的时候会一起被抓取到。注意 Cookie 需要SUB和SUBP两个字段。填写形式同 COOKIE_WEIBO。\n详细抓取教程可参考视频：微博国际版 iOS 抓包教程\n推送相关详解\n在配置中，设置 ONEPUSH 变量开启推送。不支持同时使用多个推送。默认配置/格式如下：\n123456&#123;  &quot;notifier&quot;: &quot;&quot;,  &quot;params&quot;: &#123;    &quot;markdown&quot;: false  &#125;&#125;\n实际填写时请浓缩至一行，形如 &#123;&quot;notifier&quot;:&quot;&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:false&#125;&#125;。如果是本地配置，请使用单引号包裹。\nONEPUSH 根配置：\n\nnotifier：推送名字，如 bark、dingtalk、discord、pushplus、qmsg、serverchan、serverchanturbo、telegram、wechatworkapp、wechatworkbot、custom 等。\nparams：推送参数，如 markdown、required、secret 等。\n\n如使用 Discord Bot：\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;discord&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:true,&quot;webhook&quot;:&quot;https://discord.com/api/webhooks/xxxxxx&quot;&#125;&#125;\n详细配置说明\n下列参数如果 required 字段包含 ‘title’ 或 ‘content’，ONEPUSH 变量中都不需要设置。例如 serverchan 不需要设置 ‘title’。\n此外 custom 方式暂时不支持推送签到结果。\n\n\nbark\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;bark&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:false,&quot;key&quot;:&quot;xxxxxx&quot;&#125;&#125;\n\ncustom\n\n该方式比较复杂：\n123456789101112&#123;  &quot;method&quot;: &quot;post&quot;,  &quot;url&quot;: &quot;&quot;,  &quot;data&quot;: &#123;&#125;,  &quot;retcode_key&quot;: &quot;&quot;,  &quot;retcode_value&quot;: 200,  &quot;data_type&quot;: &quot;data&quot;,  &quot;merge_title_and_desp&quot;: false,  &quot;set_data_title&quot;: &quot;&quot;,  &quot;set_data_sub_title&quot;: &quot;&quot;,  &quot;set_data_desp&quot;: &quot;&quot;&#125;\n| 配置项               | 描述                                                                                                                                                                                                    |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---- | ---------------- |\n| method               | 必填，请求方式。默认：post                                                                                                                                                                              |\n| url                  | 必填，完整的自定义推送链接                                                                                                                                                                              |\n| data                 | 选填，发送的 data。默认为空，可自行添加额外参数                                                                                                                                                         |\n| retcode_key          | 必填，响应体返回的状态码的 key                                                                                                                                                                          |\n| retcode_value        | 必填，响应体返回的状态码的 value                                                                                                                                                                        |\n| data_type            | 选填，发送 data 的方式，可选 params                                                                                                                                                                     | json | data，默认：data |\n| merge_title_and_desp | 选填，是否将标题（应用名 + 运行状态）和运行结果合并。默认：false                                                                                                                                        |\n| set_data_title       | 必填，推送方式 data 中消息标题的 key                                                                                                                                                                    |\n| set_data_sub_title   | 选填，推送方式 data 中消息正文的 key。有的推送方式正文的 key 有次级结构，需配合 set_data_title 构造子级，与 set_data_desp 互斥。例如：企业微信中，set_data_title 填 text，set_data_sub_title 填 content |\n| set_data_desp        | 选填，推送方式 data 中消息正文的 key。例如：server 酱的为 desp，与 set_data_sub_title 互斥，两者都填则本项不生效                                                                                        |\n例如写一个 ServerChan 的自定义推送。\n查看文档得到 ServerChan 推送所需要的信息：\n\n需要的 url形式为：https://sc.ftqq.com/&#123;SCKEY&#125;.send\n发送的 data形式为：&#123;'text': test','desp':desp&#125;\n消息发送成功响应体为：&#123;'errno': 0, 'errmsg': 'OK'&#125;\n\n自定义推送配置如下：\n123456789101112&#123;  &quot;method&quot;: &quot;post&quot;,  &quot;url&quot;: &quot;https://sc.ftqq.com/&#123;直接填写你的SCKEY&#125;.send&quot;,  &quot;data&quot;: &#123;&#125;,  &quot;retcode_key&quot;: &quot;errno&quot;,  &quot;retcode_value&quot;: 0,  &quot;data_type&quot;: &quot;data&quot;,  &quot;merge_title_and_desp&quot;: true,  &quot;set_data_title&quot;: &quot;test&quot;,  &quot;set_data_sub_title&quot;: &quot;&quot;,  &quot;set_data_desp&quot;: &quot;desp&quot;&#125;\n\ndingtalk\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;dingtalk&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:true,&quot;token&quot;:&quot;xxxxxx&quot;,secret:&quot;xxxxxx&quot;&#125;&#125;\n\ndiscord\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;discord&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:true,&quot;webhook&quot;:&quot;https://discord.com/api/webhooks/xxxxxx&quot;&#125;&#125;\n\npushplus\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;pushplus&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:true,&quot;token&quot;:&quot;xxxxxx&quot;&#125;&#125;\n\nqmsg\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;qmsg&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:false,&quot;key&quot;:&quot;xxxxxx&quot;&#125;&#125;\n\nserverchan\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;serverchan&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:true,&quot;sckey&quot;:&quot;xxxxxx&quot;&#125;&#125;\n\nserverchanturbo\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;serverchanturbo&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:true,&quot;sctkey&quot;:&quot;xxxxxx&quot;&#125;&#125;\n\ntelegram\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;telegram&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:false,&quot;token&quot;:&quot;xxxxxx&quot;,&quot;userid&quot;:&quot;xxxxxx&quot;&#125;&#125;\n\nwechatworkapp\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;wechatworkapp&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:true,&quot;corpid&quot;:&quot;xxxxxx&quot;,&quot;corpsecret&quot;:&quot;xxxxxx&quot;,&quot;agentid&quot;:&quot;xxxxxx&quot;&#125;&#125;\n\nwechatworkbot\n\n1ONEPUSH=&#123;&quot;notifier&quot;:&quot;wechatworkbot&quot;,&quot;params&quot;:&#123;&quot;markdown&quot;:true,&quot;key&quot;:&quot;xxxxxx&quot;&#125;&#125;\n","plink":"https://blog.cworld.top/post/mihoyo-helper/"},{"title":"Hexo 主题之 Inside 拓展篇","date":"2022-02-14T23:15:28.000Z","date_formatted":{"ll":"2022年2月14日","L":"2022/02/14","MM-DD":"02-14"},"updated":"2024-02-13T08:08:44.107Z","content":"Inside 是一款采用 SPA 打造的轻量级和功能丰富的 Hexo 主题。然而整体上作者采用了较为开放的丰富的自定义模式，所以很多功能都需要手动调整。\nHexo 内部调整\n个人建议不要设置时区，因为设置了反而不好用。\n这里给出一些重要的配置项：\n1234567language: zh-Hans # 主题的配置写法permalink: /post/:title/ # 个人在这里相对喜欢这种简单的格式skip_render: [&quot;css/*&quot;, &quot;js/*&quot;] # 便于在仓库内置各类文件deploy:  type: git  repository: git@github.com:&lt;用户名&gt;/&lt;仓库&gt;.git # 这种写法更不容易报错  branch: &lt;分支&gt;\nInside 主题配置\n\n\n想要像我那样侧栏用户名有漂亮的字体，配置应该额外调整：\n1234567appearance:  # ...  font:    url: //fonts.googleapis.com/css?family=Lobster|Baloo+Bhaijaan|Inconsolata|Josefin+Sans|Montserrat    base: &quot;Josefin Sans&quot;    logo: &quot;Lobster&quot; # 就是这款字体    menu: &quot;Baloo Bhaijaan&quot;\n\n\n想要在社交按钮栏加上自定义的按钮，需要单独引入 svg 图标。比如添加一个酷安的按钮：\n123456sns:  # ...  - title: 酷安    url: https://www.coolapk.com/u/1384771    template: |      &lt;svg t=&quot;1644654153078&quot; class=&quot;icon&quot; viewBox=&quot;0 0 1922 1024&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; p-id=&quot;1687&quot; data-darkreader-inline-fill=&quot;&quot; width=&quot;18&quot; height=&quot;18&quot;&gt;&lt;path d=&quot;M513.810604 0c308.858273 0 602.991192 297.820939 602.991192 297.820939l-132.287657 102.890399S723.386322 178.321089 513.810604 178.321089c-143.391802 0-329.062206 104.787859-329.062206 323.556901 0 213.250375 136.029126 334.594235 330.906216 334.594235C1023.05127 836.485587 1203.216369 0 1363.15081 0c104.787859 0 175.047303 244.772252 297.820938 450.406065 147.06646 246.349014 261.475239 472.814793 261.47524 481.660695 0 49.641277-46.380854 91.919878-79.479494 91.919878S1206.891026 577.255229 1206.891026 577.255229l148.910469-108.462516 189.345061 128.679812L1359.476153 259.230358c-57.912596 57.899234-336.424882 764.769642-834.628215 764.769642C329.970848 1023.986638 0 880.581473 0 500.047343 0 284.952958 162.687093 0 513.810604 0z&quot; p-id=&quot;1688&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n\n\n在侧栏配置上，名称前面加上 Emoji 看起来会更加美观：\n12345menu:🏠 Home: /🔍 Search: /search🔗 Link: /link🧑‍💻 About: /about\n\n\n自动 CI 部署\n这里采用 Star 数较高的一个自动 Github Action ，提到了整个流程。如果不太懂，也可以参考别人的一些教程。这里提几个点：\n\n运行命令 $ ssh-keygen -t rsa -C &quot;username@example.com&quot; 时会提示一些选项，建议全部按回车默认选项。这会在你的用户名文件夹根目录下生成一个 .ssh 文件夹，得到两个文件，其中带.pub 后缀的为公钥，另一个为私钥。两者可以填在同一个仓库不同分支，也可以填在不同的仓库。\nGithub Actions 的配置文件应该在项目根目录下的 .github &gt; workflows ，默认名称为 main.yml ，当然你也可以随意命名。将整个项目一起上传上去，Github Actions 会自动执行并生成渲染文件。\n自定义域名应该在项目的 source 目录中放一个 CNAME 文件。\n\n评论系统\nWaline + Leancloud + Vercel\nWaline 基于 Valine，是一个干净纯粹但功能丰富的评论系统框架。它支持 Markdown 语法，支持自定义表情、部分文字、配色、精选，以及后台管理、邮件自动发送等功能。\n文档\nWaline 官网\nWaline on Github\n配置上手\n除官网给出部分，博客这边配置也非常重要。由于 Inside 主题是直接通过变量达成夜间模式的切换的，所以就宣告着 Waline 自身夜间模式的报废。当然这并不影响夜间模式的效果。下面是我的配置。\n1234567891011121314151617- position: comments  template: |    &lt;div id=&quot;waline&quot;&gt;评论正在努力加载中...&lt;/div&gt;    &lt;script&gt;      Waline.init(&#123;        el: &#x27;#waline&#x27;,        serverURL: &#x27;&lt;你的Vercel的url&gt;&#x27;,        locale: &#123;placeholder:&#x27;欢迎评论~&#x27;&#125;,        comment: true,        pageview: true,        emoji: [          &#x27;https://blog.cworld.top/src/img/bilibili&#x27;,          &#x27;https://blog.cworld.top/src/img/weibo&#x27;,        ],      &#125;);    &lt;/script&gt;    &lt;link href=&quot;/css/comment.min.css&quot; rel=&quot;stylesheet&quot;&gt;\n其中页面/文章访问数的功能完全仅用于统计数据，暂时不打算做效果呈现。Leancloud 可以轻松查询到。Emoji 则采用了较为经典的微博和 B 站表情。\n评论样式内容较多而且为了方便维护，故单独引用文件。\n文件这里贴一份仅供参考：\n12345678910111213141516171819202122232425:root &#123;  --waline-dark-grey: var(--inside-foreground-color);  --waline-theme-color: var(--inside-accent-color);  --waline-active-color: var(--inside-accent-color);  --waline-color: var(--inside-foreground-color);  --waline-bgcolor: var(--inside-background);  --waline-bgcolor-light: var(--inside-card-background);  --waline-bgcolor-hover: var(--inside-card-background);  --waline-border-color: var(--inside-border-color);  --waline-disable-bgcolor: var(--inside-card-background);  --waline-disable-color: var(--inside-foreground-color);  --waline-code-bgcolor: var(--inside-highlight-00);  --waline-mobile-avatar-size: calc(var(--waline-avatar-size) * 11 / 13);  --waline-badge-color: var(--inside-accent-color);  --waline-info-bgcolor: var(--inside-background);  --waline-avatar-radius: 50%;&#125;#waline .wl-editor &#123;  width: calc(100% - 2em) !important;&#125;#waline pre &#123;  border-color: var(--inside-highlight-01);&#125;\n自定义小插件\n站点访问统计\nInside 提供了两个自定义片段位置。由于我的 custom 还有别的东西要放，这里就只写在 copyright 里。在主题配置文件修改：\n12345footer:  # Set to false to hide.  copyright: |    &lt;script async src=&quot;https://busuanzi.icodeq.com/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;    &amp;copy;2022 • &lt;a href=&quot;&quot;&gt;CWorld&lt;/a&gt; • 总访问 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; 次\n代码块快捷复制到剪贴板\n先从 Github 下载文件并放置好目录\n然后在主题配置文件修改：\n12345678910111213plugins:  # ...  - js/clipboard.min.js # 全局引入剪贴板JS文件  - position: [post, page] # 剪贴板    template: |      &lt;script&gt;        var elements = document.querySelectorAll(&quot;.highlight tr&gt;.code&quot;);        for (var i = 0; i &lt; elements.length; i++) &#123; elements[i].innerHTML = &#x27;&lt;button class=&quot;btn-copy&quot; data-clipboard-snippet=&quot;&quot;&gt;&lt;svg t=&quot;1644686763820&quot; class=&quot;icon&quot; viewBox=&quot;0 0 1024 1024&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; p-id=&quot;2062&quot; data-darkreader-inline-fill=&quot;&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;&lt;path d=&quot;M798.4 128h-72v-12.8c0-38.4-33.6-72-72-72h-97.6C555.2 17.6 537.6 0 512 0c-25.6 0-43.2 17.6-43.2 43.2h-97.6c-38.4 0-72 33.6-72 72V128h-72c-30.4 0-56 25.6-56 56v780.8c0 33.6 25.6 59.2 59.2 59.2h568c17.6 0 33.6-8 43.2-20.8 8-12.8 12.8-25.6 12.8-38.4V184C852.8 153.6 827.2 128 798.4 128zM384 128h256v84.8H384V128z m384 811.2H256V212.8h43.2v12.8c0 38.4 33.6 72 72 72h281.6c38.4 0 72-33.6 72-72v-12.8H768v726.4z&quot; p-id=&quot;2063&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&#x27; + elements[i].innerHTML &#125;;        new ClipboardJS(&#x27;.btn-copy&#x27;, &#123; target: (trigger) =&gt; trigger.nextElementSibling &#125;);      &lt;/script&gt;      &lt;style&gt;        .btn-copy&#123;position:absolute;right:5px;top:5px;border:none;padding:3px 6px;border-radius:3px;background:var(--inside-background);fill:currentColor;opacity:0;transition:.3s&#125;.highlight:hover .btn-copy&#123;opacity:1&#125;      &lt;/style&gt;\n其实大部分自定义代码都是在用 SVG 写图标，所以不用担心代码量很大~\n友链优化\n这个主题最大的短板就是没有单独的友链支持。所以这里单独对友链介绍一下我的解决方案。\n在友链页面按照如下格式写：\n\n\n提前引用 css 样式避免排版错乱\n1&lt;link href=&quot;/css/link.min.css&quot; rel=&quot;stylesheet&quot;&gt;\n其 CSS 文件也贴出来仅供参考：\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081.f &gt; ul &#123;  display: flex;  flex-wrap: wrap;  padding: 0;&#125;.f &gt; ul &gt; li &#123;  transition: 0.3s ease;  list-style: none;&#125;.f &gt; ul &gt; li &#123;  display: flex;  margin: 0 10px 10px 0;  text-decoration: none;  padding: 10px;  background-color: var(--inside-background);  color: var(--inside-accent-color);  border-radius: 6px;&#125;.f &gt; ul &gt; li:hover &#123;  color: #fff;  background-color: var(--inside-accent-color);  box-shadow: 0 2px 4px 1px rgb(0 0 0 / 20%);  transform: scale(1.03);&#125;.f &gt; ul &gt; li:active &#123;  transform: scale(0.97);&#125;.f &gt; ul &gt; li &gt; p &#123;  margin: 0;&#125;.f img &#123;  border: solid 1px var(--inside-border-color);  border-radius: 25px;  width: 50px;  height: 50px;  margin: 0 !important;  max-width: fit-content;&#125;.f &gt; ul &gt; li &gt; ul &#123;  position: relative;  margin-left: 10px;  padding: 0;&#125;.f &gt; ul &gt; li &gt; ul &gt; li &#123;  list-style: none;  text-align: center;&#125;.f &gt; ul &gt; li &gt; ul &gt; li:nth-child(1) &#123;  font-size: 14px;&#125;.f &gt; ul &gt; li &gt; ul &gt; li:nth-child(2) &#123;  font-size: 12px;  margin-top: 5px;  max-width: 108px;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;  opacity: 0.8;&#125;.f &gt; ul &gt; li &gt; ul &gt; li:nth-child(3) a &#123;  position: absolute;  right: 0;  top: 0;  height: 100%;  width: 100%;  border: 0;  color: transparent;&#125;@media (max-width: 450px) &#123;  .f &gt; ul &gt; li &#123;    margin-left: 0;    width: 100%;  &#125;  .f &gt; ul &gt; li &gt; ul &#123;    width: 100%;  &#125;  .f &gt; ul &gt; li &gt; ul &gt; li &#123;    text-align: start;    max-width: 100% !important;  &#125;&#125;\n\n\n随后用一个 div 标签将需要优化展示的友链包裹起来即可。这样通过 Markdown 语法写出来的友链，真的是不知道要比手动写 html 标签要高到哪里去了。\n12345678&lt;div class=&quot;f&quot;&gt;- ![](https://gravatar.loli.net/avatar/1ffe42aa45a6b1444a786b1f32dfa8aa?s=400)  - CWorld&#x27;s Blog  - 求知若愚，虚怀若谷  - [](https://blog.cworld.top)&lt;/div&gt;\n\n\n结尾\n静态博客能够折腾到这个地步真的已经做的很不错了。希望大家都能把博客折腾成各自喜欢的样子，然后长期坚持把内容写下去，否则，折腾一大圈，也不过是一时热情，只会拖累自己的产物罢了。\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/hexo-inside/thumbnail.jpg","color":"#5f7c8c","plink":"https://blog.cworld.top/post/hexo-inside/"},{"title":"Chrome 小恐龙无敌化","date":"2021-02-18T15:55:58.000Z","date_formatted":{"ll":"2021年2月18日","L":"2021/02/18","MM-DD":"02-18"},"updated":"2024-02-13T08:08:44.055Z","content":"前言\n众所周知，谷歌的 Chrome 含有一枚彩蛋，是一个画风清奇的小恐龙游戏，可以通过断网和直接访问一下网址触发：\nChrome://dino\n但是对于这种逐渐加速的小游戏来说，玩到后面就特别容易内心崩溃，于是便有了此文。\n食用方法\n来到熟悉的网页，按下罪恶的 F12：\n\n看到控制台的 Console 了吗？点开就对了。\n三行代码，总有你喜欢的：\n\n\n让小恐龙无敌：\nRunner.instance_.gameOver=function()&#123;&#125;\n\n\n让小恐龙跑得更快（默认是 10，但是你可以手动修改使它更快）：\nRunner.instance_.setSpeed(20)\n\n\n让小恐龙跳得更高（默认是 10，但是你可以手动修改使它更富有弹性）：\nRunner.instance_.tRex.setJumpVelocity(20)\n\n\n就像这样子：\n\n问我最高多少分？我觉得应该是 999999 分。\n\n后话\n我觉得，当你无敌后，一种莫名的无聊感觉涌上心头…\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/chrome-dinosaur/thumbnail.jpg","color":"#7FD9DA","plink":"https://blog.cworld.top/post/chrome-dinosaur/"},{"title":"高考随笔 —— 我想","date":"2020-09-26T20:40:51.000Z","date_formatted":{"ll":"2020年9月26日","L":"2020/09/26","MM-DD":"09-26"},"updated":"2024-02-13T08:08:44.103Z","content":"博主已经踏入高三的坎了，所以给自己写诗歌随笔来激励自己。\n\n没有什么原因，\n只是突然地，我想。\n那时候的我，极像是茅塞顿开一般。\n我想找回一些关于梦开始的东西。\n就像深海孤岛般温柔的鲸落，远离世俗、喧嚣，还有残存着原始的粗旷。\n我想去看看物种最后的倔强，它慵懒的眼神，清晰地透着孤独又悲伤。\n真想。\n我想坐一列并不时髦的旧式火车，那锈迹斑斑的墨绿色铁皮外，一路的绿树高桥。\n顺带一夜的樱花流水、、不，那时只剩下江枫烈火。\n我想去看旧时的江户风尚、银座、新宿的纸醉金迷的涤荡。\n总会有人提及至尊黑道的故事，在细雨弥香的酒吧，昏暗的灯光幽幽地闪烁着香槟一样的金黄。\n我想去参拜满是沉香的神社，亲自穿过砖红色的鸟居，然后抿一口茶的芳香。\n我想去坐观关于古代神话的歌舞伎，扮演伊邪那美命的男子婉转的舞步和凄厉的歌唱在脑海里回荡，\n在尚未荒废的古老剧院，残存着像是古老图腾的浮雕，诸神黄昏的图画伸展在高耸的穹顶上。\n我想去大名鼎鼎的秋叶原，在翠色如云的风采里，会不会有披挂十二单的女子，踏着木屐从街角缓缓走过，心底会不会藏着曾经深爱、始终放不下的牛郎。\n我想去伫足侧望老人家风旋的古老剑术，去千叶县拜访故交的老友，铁青色的玄关也许插满白色不知名的小花。他会同我缓缓叙旧，领我细品一顿来自北海道新鲜的晚餐，一壶凛冽的清酒，祛除了我一身的寒霜。\n我想… …\n不，这并不立足于当下。\n从梦中醒来的我惊恐地四下张望。\n我想回头，但时间的齿轮已在飞旋中磨得锃亮。\n而我只能鼓起勇气，怀揣梦想，打破天窗，\n用尽我的全身力气。\n也许，命运之门已悄然打开… …\n","plink":"https://blog.cworld.top/post/gaokao-essay/"},{"title":"酷安 318 事件","date":"2020-03-22T21:02:06.000Z","date_formatted":{"ll":"2020年3月22日","L":"2020/03/22","MM-DD":"03-22"},"updated":"2024-02-13T08:08:44.059Z","content":"我们暂且用『载入酷安史册』来形容这 7 天的历史。\n（该文章于 2020-03-22 匆成，于 2020-04-04 发布）\n迟到一年的文章，本来不准备发出来的，如今发出来，也就算是最后的纪念吧。\n\n起因\n事情开始于 3.16 。（原文章已被删除）\n原文实在找不到了，大概内容可以看下这位用户的回答。\n半生瓜 BalsamPear 的知乎回答\n@匿名游客(酷安官方人员) 的说法：匿名游客的知乎回答\n然而，更为过分的是，仅过了 2 天，又有人持续触犯了警戒线。\n在这样严峻的情况下，酷安小编最终发出了这样的动态： 酷安小编的酷安动态\n“ 我们鼓励大家多交流，多发优质内容，但我们的红线是涉政涉黄涉恐，特别是很多人喜欢玩一些很危险的梗，还是我们太温柔，我发自内心的一直觉得酷友就像一家人，所以我们很珍惜每一位酷友，但这种宽容有好处也有坏处，还是请各位酷友多多珍惜这种氛围，珍惜自己的账号和设备，因为从此以后我们会非常严格，谢谢支持。”\n黄福林随即表明：这次就是要执行禁止发布任何形式的涉政涉黄涉恐涉暴内容的规则，指明与 3.16 事件无关 （黄福林的酷安动态） ，但不难想到，这次事情的前提是上述事件同时发生。\n匿名游客后来给出了一个更为明确的说法：起因是涉黄的用户被处理，用一张小管家提示图去诱骗那个小圈子的人，说非数码举报必成功，让他们去测试，然后他们就信了。\n于是，酷安也就开始了为期 7 天的整改。\n思考\n是的，我们将一同度过这个意义深刻的酷安时刻。\n但不必过于悲观，官方所有人员也将与我们一同为这样的 7 天恼火和难过，在当前很多人都在家刷流量的时候，酷安却因此蒙受巨大损失。不必怨天尤人，这样的结果也毕竟是酷友们一手造成的。也不必过于追究酷友的责任，毕竟每个人都有自己的想法，酷安也因众多酷友而有了今天。\n酷安也确实有能耐和必要去这样做了。知乎有很多酷友，在为大家耐心解答，3.16 这件事情也在知乎排名最高 22 名。\n在这大数据的背后，我们应该更加深刻地反思自己，不管自己是否参与。我们更应该和谐地与大家相处，珍惜自己摆弄了数天的账号，为酷安这个社区增添一份力。能有这样，酷安也就会真正达到自我净化的目的。我们希望，7 天后的酷安应是一片友善和谐的景象。\n在这 7 天里：我们仍然可以发布和翻阅动态，给自己的看看号收录合适的图文，或是积极参与问答。\n我们仍可以在像是知乎等平台，重新给酷安一个全新的认识。是的，无论这 7 天，你到了其他平台，去了其他社区，还请记得及时回头，酷安在这 7 天一直等着你，酷安与你同在。\n后话\n我们忘不了在酷安所做的点点滴滴，在酷安结识的新朋友，发现更大的天地，甚至改变自己的生活。我们应该感谢酷安官方们这么多年来，给我们的默默付出。\n我甘愿相信，7 天归来，仍是酷安。\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/coolapk-318/thumbnail.jpg","color":"#28B17F","plink":"https://blog.cworld.top/post/coolapk-318/"},{"title":"钉钉一键点赞（最高 21 亿）","date":"2020-03-03T23:21:47.000Z","date_formatted":{"ll":"2020年3月3日","L":"2020/03/03","MM-DD":"03-03"},"updated":"2024-02-13T08:08:44.063Z","content":"想必感兴趣的已经试过了连点器的畅快吧。在玩转这之前，这确实不失为一种强有力的手段。然而如果这样的话，最多也就不过十万。这怎么能让博主折服呢，所以就从钉钉直播下手。在这之前，先对这个套壳钉钉有一个更深入的了解。\n思路分析\n运行逻辑\n先研究一下点赞的运行逻辑：\n\n由于钉钉的客户端中的网络通讯加密，点赞数上传也不例外，所以我们从直播间网页上下功夫。\n直播间所用网页：钉钉直播间\n\n注意：钉钉加载直播间的弹出窗口实际上是一个浏览器，其网络通讯可以被 Fiddler 获取到，亦可以通过其 Autoresponder 功能替换为本地文件，这就是我们的突破口。\n\n目标流程\n\n其中不对 favorCount 进行自增是为了确保赞数确实上传到服务器并进行了累加，这样会导致点击之后到数值显示有一定的延迟，一般在几秒钟。此时我们看到点击一次点赞按钮到一定时间后（源文件中是 1000ms ）将会触发上传操作。\n具体实现\n理论实践\n首先根据原理准备网页文件，下载直播间代码。\n打开上述网址，Ctrl + S 保存。注意我们只需要 html 文件。\n\n搜索 uploadLikesClick 字段，将看到一个函数。\n\n注意两个画框的地方，它们就是要修改的核心。\n这样一来就可以直接修改了。将第一个框中的内容改为：\n1uploadLikesClick(B, 10000000);\n第二个框中的 1e4 即为上传间隔，赋值为 0 即为清零操作。\n故我们可以做到如下图一般的骚操作：\n1uploadLikesClick(B,Math.ceil(10000000*Math.random()+1)),t.favorCountCache=1)&#125;,1e2)\n至此理论部分结束。如有技术可以自己实现了。经过实验钉钉存赞数的变量为 32 位有符号 int 其最大值约为 21 亿左右，超出后变成负值，直播间会显示为 0 。如果还有人点赞，赞数会增加但是 -21 亿没什么人会点的过来的…除了这样改。\n\nPs. 10000000 好像是最大值了。\n\nFiddler 修改\n\n首先你需要下载并修改好直播间网页并将其保存在本地。\n安装 Fiddler 。\n打开 Fiddler 的 HTTPS 模式，位于 Tools - Options - HTTPS 。\n\n配置 Autoresponder ，即在测试环境中将在线网页强制替换为本地网页。\n\n打开清理钉钉的网页缓存，位于%LOCALAPPDATA%\\DIngtalk\\Cache，删除全部 f 开头的文件。\n\n%LOCALAPPDATA% 为 C:\\Users\\你的电脑用户名\\AppData\\Local\nPs. 此步骤需在每次 更改网页文件后和重新打开直播间之前 完成，否则会导致替换失败。\n\n\n打开钉钉直播间，如果遇到错误没关系，多打开几次，当播放正常之后，点赞吧。\n\n效果展示\n\n注意事项\n为了避免视频界面缓存问题，我们将大部分缓存都清除了，这会使直播界面甚至其他界面需要重载缓存，因此清理后很多界面需要二次打开才能加载。\n同时需要注意的是，点赞仅供娱乐。请勿过分贪玩，适度为止。\n主播禁用点赞的问题\n根据测试，禁用功能应该是最近研发的，而相关代码似乎是直接追加到最后的，所以趁直播界面加载完毕之前，拟好点赞位置猛击，就会发现还是可以卡的出几个赞的。如果你需要更快的点赞方式，建议使用 鼠大侠 等软件，帮助你更快地在加载的片刻迅速点赞。\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/dingtalk-like/thumbnail.jpg","color":"#640D80","plink":"https://blog.cworld.top/post/dingtalk-like/"},{"title":"钉钉云课堂提取视频 & 倍速播放 & 学习进度","date":"2020-03-03T23:21:47.000Z","date_formatted":{"ll":"2020年3月3日","L":"2020/03/03","MM-DD":"03-03"},"updated":"2024-02-13T08:08:44.071Z","content":"钉钉的云课堂比较反人类，不仅有水印影响观看体验，而且不支持倍速播放。看讲课比较慢的老师的视频，无疑是一种煎熬。过于慢的速度，反而会影响效率。\n教程由简单到难逐渐递增，不过玩法也越来越多，所以还请斟酌着看。\n利用 IDM 下载\n来自知乎用户 cxy（方法及其简单粗暴，一看便懂。博主测试直播回看界面失效）\n首先，下载一个 IDM（internet download manager），这个软件平时当多核下载器拿来下浏览器里的文件也是非常不错的。百度一下网上都有 IDM 的下载链接，浏览器插件也行。\n\n安装完成以后在后台运行，点开你的课堂网址，右上角就会出现这样的标识：\n\n如果没有出现，多刷新几次页面就可以了\n下载到你电脑的视频就可以任你宰割了，你只需要随便用一个支持倍速播放的播放器即可\n\n使用 HttpCanary 抓取\n来自知乎用户 solstice23，方法比较中矩，还是有一些参考价值的。\n下载 HttpCanary 软件（这里提供一个下载链接）\n\n\n进入钉钉，先不要打开云课堂视频。\n\n\n打开 HttpCanary，点击右下角的开始捕获按钮。\n\n\n切回钉钉，打开云课堂视频，播放几秒\n\n\n切回 HttpCanary，点击右下角按钮暂停抓包\n\n\n点击右上角搜索按钮，选择类别 “视频”\n\n\n筛选出来几个数据包，地址都是相同的。随便点进去一个，长按地址复制。\n\n\n使用下载器下载该视频（例如 ADM 下载器），并使用支持倍速播放的播放器播放即可。\n\n\n\n利用 Fiddler 注入 JS\n可以说这里开始才是正文。同时也对作者 樱花赞 表示感谢！\n\nPS.他并不是原创，最初原创的是 solstice23\n\n思路\n云课堂的本质是一个（套壳的）网页，可以用抓包软件分析记录学习进度请求，再通过修改这个请求并重发来修改学习进度。\n提示\n该方法仅 PC 端可用（其实手机也不是不行）。\n教程\n安装 Fiddler\n点击这里下载安装。\n设置 Fiddler 捕获 HTTPS 流量\n打开 Fiddler，点击顶栏 “Tools”，在弹出的菜单中点击 “Options…”。\n\n在弹出的窗口中切换到顶部的 “HTTPS” 菜单，勾选 “Capture HTTPS CONNECTs” 和 “Decrypt HTTPS traffic” 复选框，然后点击 OK。\n勾选后会弹出安装证书的窗口，确认即可。\n\n如果出现下面这样的黄条，点击黄条即可。\n\n写入脚本\n在 Fiddler 中按下 Ctrl+R 。弹出一个代码编辑器窗口。\n\n在代码编辑器窗口按下 Ctrl+F ，在弹出的窗口中输入 OnBeforeResponse 并按下回车。找到 OnBeforeResponse 函数（下图所示）。\n\n把图中的下面这段：\n12345static function OnBeforeResponse(oSession: Session) &#123;    if (m_Hide304s &amp;&amp; oSession.responseCode == 304) &#123;        oSession[&quot;ui-hide&quot;] = &quot;true&quot;;    &#125;&#125;\n替换成下面的代码，然后按下 Ctrl+S 来保存。\n\n下方代码已经整合 【一劳永逸】钉钉云课堂倍速播放教程 中的代码（看过这篇教程的，可以把原来的代码删掉用下面的）。\n以下代码部分来自 HTML5 播放器增强插件，对原作者深表感谢！\n以下代码参考 aneasystone’s blog: 通过 FiddlerScript 实现根据条件重发请求，对博主深表感谢！\n\n1234567891011121314151617181920212223242526272829303132333435363738public static RulesOption(&quot;视频增强插件&quot;)var m_H5VideoPlayerExtension: boolean = true;public static RulesOption(&quot;自动学习&quot;)var m_AutoLearn: boolean = true;static function OnBeforeResponse(oSession: Session) &#123;    if (m_Hide304s &amp;&amp; oSession.responseCode == 304) &#123;        oSession[&quot;ui-hide&quot;] = &quot;true&quot;;    &#125;    if (m_H5VideoPlayerExtension) &#123;        var sToInsert = &quot;&lt;script src=data:application/javascript;base64,&gt;&lt;/script&gt;&quot;;        oSession.utilDecodeResponse();        oSession.utilReplaceOnceInResponse(&#x27;&lt;/head&gt;&#x27;, sToInsert + &#x27;&lt;/head&gt;&#x27;, 0);    &#125;    if (m_AutoLearn &amp;&amp; !oSession.GetRequestBodyAsString().Contains(&quot;\\&quot;courseTime\\&quot;:9990,\\&quot;learnTime\\&quot;:60,\\&quot;type\\&quot;:2&quot;)        &amp;&amp; oSession.hostname == &quot;saas.daxue.dingtalk.com&quot; &amp;&amp; oSession.PathAndQuery == &quot;/dingtalk/course/record.jhtml&quot;)&#123;        var raw = &quot;&quot;;        var method:String = oSession.RequestMethod;        var url:String = oSession.fullUrl;        var protocol = &quot;HTTP/1.1&quot;;        raw += method + &quot; &quot; + url + &quot; &quot; + protocol + &quot;\\r\\n&quot;;        var body = oSession.GetRequestBodyAsString();        for (var i:int = 0; i &lt; oSession.oRequest.headers.Count(); i++) &#123;            var header = oSession.oRequest.headers[i];            header = header.ToString()            if(header.Contains(&quot;Content-Length&quot;))&#123;                header = &quot;Content-Length: &quot;+(body.Length+4).ToString()            &#125;            raw += header + &quot;\\r\\n&quot;;        &#125;        body = body.replace(/&quot;courseTime&quot;:\\d+,&quot;learnTime&quot;:\\d+,&quot;type&quot;:\\d/g,&quot;\\&quot;courseTime\\&quot;:9990,\\&quot;learnTime\\&quot;:60,\\&quot;type\\&quot;:2&quot;);        raw += &quot;\\r\\n&quot; + body;        for (var j:int = 0; j &lt; 10; j++) &#123;            FiddlerObject.utilIssueRequest(raw);            FiddlerApplication.Log.LogString(&quot;Request has been Send.&quot;);            System.Threading.Thread.Sleep(1000);        &#125;    &#125;&#125;\n看视频\n看视频的时候，每次刷新页面（包括第一次进入视频页面时的加载）程序会花 10 s 时间给视频增加 10 min 的学习进度。保险起见，请不要频繁刷新。\nLog 选项卡中，每出现一条Resquest has been Send.说明学习进度增加了 1 min。快速出现大量Resquest has been Send.时，可能是刷新过于频繁或程序错误，请立刻关闭 Fiddler。如果 Fiddler 未响应，可能是陷入死循环，立刻在任务管理器里结束进程。\n\n在 Rules 中可以启用或关闭 视频增强插件 和 自动学习。\n\n快捷键说明\n\n播放速度调节\n按键 C：加速播放 +0.1\n按键 X：减速播放 -0.1\n按键 Z：正常速度播放\n播放时间定位\n方向键右 →：快进 3 秒\n方向键左 ←：后退 3 秒\n按键 F：下一帧\n按键 D：上一帧\n音量调节\n方向键上 ↑：音量升高 1%\n方向键下 ↓：音量降低 1%\n图像参数调节\n按键 E：亮度增加%\n按键 W：亮度减少%\n按键 T：对比度增加%\n按键 R：对比度减少%\n按键 U：饱和度增加%\n按键 Y：饱和度减少%\n按键 O：色相增加 1 度\n按键 I：色相减少 1 度\n按键 K：模糊增加 1 px\n按键 J：模糊减少 1 px\n按键 Q：图像复位\n画面调节\n按键 S：画面旋转 90 度\n按键回车：进入全屏（只支持部分网站 B 站，油管）\n兼容性问题\n可以使用组合键临时停用插件，例如 播放/暂停 默认为空格键，那么使用 Ctrl+space(空格键)即可暂停使用一次插件。\n备用方案\n与上一个类似。从粘贴代码的一步发生了变化。下面就从那一步开始好了。\n中间人注入\n复制下面的代码，并粘贴到下图中的位置，然后按下 Ctrl+S 来保存。\n1234var sToInsert =  &quot;&lt;script src=&#x27;https://res.wx.qq.com/mmbizwap/zh_CN/htmledition/js/vconsole/3.0.0/vconsole.min.js&#x27;&gt;&lt;/script&gt;&lt;script&gt;var vConsole = new VConsole();&lt;/script&gt;&quot;;oSession.utilDecodeResponse();oSession.utilReplaceOnceInResponse(&quot;&lt;/head&gt;&quot;, sToInsert + &quot;&lt;/head&gt;&quot;, 0);\n\n\n直接在钉钉内倍速播放\n打开钉钉的云课堂，点开一个视频，可以看到右下角多了一个绿色按钮。点击它。\n\n\n点击之后，弹出了一个菜单。\n将下面的代码粘贴进下图中标明的位置并点击右侧的 “OK” 按钮。\n在点击右下角绿色按钮弹出的控制台按照上一步的方法输入以下代码：\n1document.querySelector(&quot;video&quot;).playbackRate = 2.0;\n点击 OK。可以将钉钉内的视频变为二倍速。代码中的 2.0 可以换成其他的数字。\n获取视频地址和下载视频\n还是右下角的绿色按钮弹出的菜单，输入下面的代码\n1console.log(document.querySelector(&quot;video&quot;).src);\n点击 OK 后，上面的列表出现了一个地址，这个地址就是该云课堂视频的源文件地址。复制这个地址，在浏览器打开即可下载该视频。或者，也可以用 Potplayer 直接打开该地址来倍速播放。\n\n附：使用 Potplayer 倍速观看视频\n推荐使用 Potplayer 来倍速观看视频。Potplayer 是一款很好用的播放器。\n下载并安装 Potplayer 后，在 Potplayer 的左上角点击如图的菜单，或者直接按下 Ctrl+U。\n\n在弹出的窗口中粘贴刚才的复制的那个视频链接，点击确定。\n\n可以看到，视频已经开始播放。\n\n按下 C 键来加速，按下 X 键来减速，按下 Z 键来恢复原速。\n按下按键后在视频左上角可以看到当前的倍速速率。\n\n尾声\n这里已经推荐了很多钟方法，相信总有一种方法适合你。希望能好好利用工具，做些有利于学习的事，而不是仅仅用来刷分数ヾ(≧▽≦*)o\n","plink":"https://blog.cworld.top/post/dingtalk-player/"},{"title":"那些好用的前端 CDN 推荐","date":"2020-03-01T21:11:00.000Z","date_formatted":{"ll":"2020年3月1日","L":"2020/03/01","MM-DD":"03-01"},"updated":"2024-02-13T08:08:44.099Z","content":"最近总感觉自己的网站速度不行，又不想重新搭建（Hexo 的宗旨就是打造响应速度超快的轻量级博客嘛），所以这篇文章也就由此应运而生了。\n一个功能丰富的博客总是要引用一些优秀的项目代码。因此为了加快响应速度，不妨从 CDN 入手。\n\nPs. 以下内容的 Ping 均选取平均值，且仅供参考。本文默认以 Ping 延迟排名，各地区和不同运营商网速各有差异，请在使用前自行测试考鉴。\n\nJSDelivr CDN\n主要支持 npm ，Github 和 WordPress 的加速。也就是说，你可以把任意你自己的代码存放在 Github 上并用它来加速。重要的是，作为一家国外的 CDN 服务平台，在中国 QUANTIL 公司的赞助下，在大陆也能享受延迟极低的快速。\n地址：JSDelivr\n赞助：Cloudflare，Fastly，StackPath，QUANTIL 和其他服务商\nPing：11ms\n推荐：★★★★★\nBootstrap 中文网开源项目 CDN 服务\n致力于为 Bootstrap、jQuery、Angular 一样优秀的开源项目提供稳定、快速的免费 CDN 服务。BootCDN 所收录的开源项目主要同步于 cdnjs 仓库。自 2013 年 10 月 31 日上线以来已经为近万家网站提供了稳定、可靠的 CDN 服务。\n根据官网来看，已经支持了 3450+ 开源项目，确实是非常全的。\n地址：BootCDN\n赞助：猫云\nPing：11ms\n推荐：★★★★★\n七牛云静态文件 CDN 服务\n七牛云的目标是提供这样一个仓库，让它尽可能全面收录优秀的开源库，并免费为之提供 CDN 加速服务，使之有更好的访问速度和稳定的环境。同时，我们也提供开源库源接入的入口，让所有人都可以提交开源库，包括 JS、CSS、image 和 swf 等静态文件。\nPs.点击搜索，才能发现那些隐藏的项目。\n地址：七牛云\n赞助：掘金社区\nPing：15ms\n推荐：★★★★★\n字节跳动静态资源公共库\n字节跳动也是一家非常具有生命力的公司，旗下的抖音和今日头条等产品也可以说是家喻户晓。更有趣的是，CDN 支持项目还非常广泛，可以与 CDNJS 对齐。\n地址：字节跳动\n赞助：无\nPing：25ms\n推荐：★★★★★\n又拍云 JS 库加速服务\n托管常用的 JavaScript 库。又一个不怎么更新速度却非常快的 CDN 。\nPs.现在只提供 JQUERY、MOOTOOLS、MODERNIZR、DOJO、EMBER.JS 五种了。另，官网没加小绿锁 🔒。\n地址：常用 JavaScript 库 CDN 服务\n赞助：SegmentFault\nPing：21ms\n推荐：★★★⚝⚝\n腾讯微信前端通用库 CDN\n太少了点…说实话不知道这样的站点还留着干嘛。\n还有，有点时间没更新了。\n地址：前端库 CDN 服务\n赞助：MIG CDN\nPing：34ms\n推荐：★⚝⚝⚝⚝\n75CDN（360 前端静态资源库）\n来自一个叫做 爆米兔 H5 服务。虽然没有明称是 360 团队的，不过这个 CDN 服务却似乎又暴露了什么。这个 CDN 服务又是叫做 奇舞团 的团队负责，而这个团队却是在为 360 做事，以至于 CDN 官网已直接用 “360 前端静态资源库” 暴露了身份。\n之前有报道过 360 CDN 已停止支持，不过现在来看支持的还是非常多的。这里更想推荐的是，75CDN 支持 Google 字体库的加速，而且效果非常不错。\n地址：75CDN\n赞助：360\nPing：36ms\n推荐：★★★★★\n腾讯网静态资源公共库\n还是太少了点…一样，有点时间没更新了。\nPs.手动改网址，似乎还能获取到最新版的，但 Vue 都没有，也算是半残废吧。另，官网没加小绿锁 🔒。\n地址：前端库 CDN 服务\n赞助：MIG CDN\nPing：37ms\n推荐：★★⚝⚝⚝\n新浪云计算 CDN 公共库\n新浪云计算是新浪研发中心下属的部门，主要负责新浪在云计算领域的战略规划，技术研发和平台运营工作。主要产品包括 应用云平台 Sina App Engine（简称 SAE）。\nSAE 的 CDN 节点覆盖全国各大城市的多路（电信、联通、移动、教育）骨干网络，使开发者能够方便的使用高质量的 CDN 服务。\n地址：SAE\n赞助：无\nPing：48ms\n推荐：★★⚝⚝⚝\n中科大 Google Fonts 加速服务\n针对 Google Fonts 很不错。\nPs.现在 Google Fonts 在国内有服务器了，而且可以直接访问。\n但 Google 能用的只有 fonts.googleapis.com、fonts.gstatic.com 这两个域名。而 ajax.googleapis.com 和 themes.googleusercontent.com 暂时还是没法直接访问，所以还是得依赖中科大。\n地址：https://lug.ustc.edu.cn/wiki/lug/services/googlefonts\n赞助：无\nPing：74ms\n推荐：★★★★⚝\n公益项目 loli.net\n网站提供常用前端公共库 CDN 服务。\n这里很多东西都有，Google Fonts、Google 公共库、Gravatar 和 前端库！\n唯一麻烦的是，不但取名为英文，而且还没有一个人性化的界面，所以你可能需要善用浏览器的搜索功能了。速度其实还是挺不错的。\nPs.改名为…萝莉？？？库？\n地址：loli.net\n赞助：公益\nPing：84ms\n推荐：★★★★⚝\n微软 Ajax CDN 服务\n估计也用不上，没什么有用的东西。好在速度还可以，应该比较稳定。\n地址：AspnetCDN\n赞助：无\nPing：92ms\n推荐：★★★⚝⚝\nCDNJS.COM\nCDNJS 提供非常完整的 JavaScript 库，无论是热门或是冷门的一应俱全。若你觉得它们缺少哪些好用的函式库，也可以自行提交到网站里，通过审核后就 CDNJS 就会为你分流 js 文件！这项服务是结合 CloudFlare、Pingdom 与 S3Stat 的，稳定性与速度自然不在话下。\nCDNJS 提供的 JavaScript Libraries 全部列在网站首页，使用者可以直接搜索。这些 JS 库都有标示版本编号、标签以及原维护网站链结。\n然而根据测试，看了下是 CF 提供的，所以大陆就速度也就一般般了。\n地址：CDNJS.COM\n赞助：Cloudflare\nPing：288ms\n推荐：★★★⚝⚝\nUNPKG\n这个网站估计玩过 npm 的都知道。只是不知道用来作 CDN 能否可行。国外的玩意速度都这样子。\n地址：UNPKG\n赞助：CloudFlare\nPing：283ms\n推荐：★★⚝⚝⚝\nCDNJS.NET\n还是很全的，感觉跟 CDNJS.COM 有什么莫名的关系，网上都说这是个盗版。但不管怎么说是速度却败下阵来，而且有一些虽还算和谐的广告。\n地址：CDNJS.NET\n赞助：无\nPing：302ms\n推荐：★★⚝⚝⚝\nGoogle Hosted Libraries\n来自谷歌的托管库，大天朝看看就行。没法用，除非你的服务器是在非天朝（港澳台还是可以的）。\nPs.前文有大陆使用方法。\n地址：Google Hosted Libraries\n赞助：无\nPing：+∞\n推荐：★⚝⚝⚝⚝\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/free-cdn/thumbnail.png","color":"#72c5ff","plink":"https://blog.cworld.top/post/free-cdn/"},{"title":"利用腾讯云无服务器云函数搭建 OneDrive 网盘","date":"2020-02-13T08:44:58.000Z","date_formatted":{"ll":"2020年2月13日","L":"2020/02/13","MM-DD":"02-13"},"updated":"2024-02-13T08:08:44.127Z","content":"原理是用腾讯云的无服务器云函数配合 API 网关实现，不需要自己的服务器。\n\n零成本搭建，实测运行机器的配置，8 核 16G 内存（可以运行 System 命令链接 Shell 看），因此此方法搭建自己的大型网站完全够用。\n腾讯云无服务器云函数（Serverless Cloud Function，SCF）是腾讯云为企业和开发者们提供的无服务器执行环境，帮助您在无需购买和管理服务器的情况下运行代码。您只需使用平台支持的语言编写核心代码并设置代码运行的条件，即可在腾讯云基础设施上弹性、安全地运行代码。SCF 是实时文件处理和数据处理等场景下理想的计算平台。\n准备\n\n\nOneDrive SCF 源码\n这里给出仓库地址：\n最初版本 OneDrive_SCF\n第二版本 OneDrive_SCF\n三合一版本 OneManager-php\n\n\n一个 OneDrive 账号\n如果你想拥有一个不限量空间，可以尝试在网上找子账号，或者自己申请 Office 365 E5 管理\n\n\n一个腾讯云账号\n\n\n提要\n\n腾讯云的 API 网关还可以关联上自己的域名，从而脱离本身的随机域名。\n如果你是 Office 365 E5 管理员并准备 90 天续期，或许这个可以帮助你长期保持活跃状态。\n\n注意事项\nAPI 网关从 2019 年 12 月 4 日开始收费。请注意不要超过额度，这意味着最好不要将网站随意告诉他人，以免恶意刷流量。当然腾讯云的免费额度对于个人来说完全够用，超出后收费也非常亲民。所以最好是在腾讯云上充值一块钱，以免意外超额。\n仅调用云函数会收费，因此查看文件的文件本身和下载仅消耗微软的免费服务，因此不会有任何费用产生。\n腾讯云免费额度\nGBs 单位与费用计算\n超出免费额度收费标准\n如果上述内容有些生涩难懂，可以配合 腾讯云函数计费示例 一同查看。\n搭建教程\n开发者也很贴心地制作了视频。点击查看 可以与此教程互相对照。\n\n\n打开进入腾讯云 SCF。\n\n\n\n函数服务-新建函数-空白函数\n\n后面如果想绑定自定义域名，只能绑定备案域名，所以刚开始新建函数的时候，我们最好选择香港地区，即从下图中的广州改为香港。\n\n\n模板选择空白。填写函数名称，注意以后会以这个名称将作网址且难以更改。运行环境选 PHP7.2。\n\n\n\n函数配置\n可以修改一下描述，提交方式选择本地上传。\n\n\n下载函数源码并上传\n下载源码：点击下载\n\n\n博主在上传的时候因为是手机操作，所以先使用了压缩包的形式，结果提示错误。所以这里可能只能选择文件夹上传。\n\n\n\n添加触发方式\n修改触发方式，开启集成响应。\n\n\n\n进入网站，添加 API 密钥\n\n选择中文，开始新建\n\n接下来的窗口选择继续，然后新建密钥。\n回到函数配置，点击右上角的编辑，将获取的密钥粘贴入环境变量中。\n\n\n\n\n完成配置\n回到之前自己建的网站，如果没有错就可以继续下一步。选择 MS 默认。\n接下来会自动跳转到 OneDrive ，选择登录并继续，即可看到配置成功的界面。\n\n回到函数配置，点击右上角的编辑，环境变量中继续添加：key 为 admin ，value 为你要设置的密码。\n\n回到网址，刷新后左上角就可以登录进入后台了。点击更新并在下方进行相应配置。这样就基本完工了！\n\n\n定义域名\n回到 API 网关，选择自定义域名，新建\n为了得到最简链接，自定义路径设为 / 发布\n\n\n如果需要 https，点击“点此前往”，然后点击申请免费证书。注意证书和域名自定义都需要添加解析。\n\n\n添加蓝色提示框内的网站为 CNAME 解析。\n访问链接即更换为：https://`你自己设置的域名`/`函数名`\n进阶域名\n最近腾讯改进出了更完美的方案，可以将上述的“/函数名”也去掉了。\n作者发的视频链接：使用自定义域名及其它设置\n找到下图，点击服务名链接。\n\n选择管理 API，点击右侧的编辑。\n\n将路径改为“/”，点击下一步直到完成即可。然后根据提示点击发布。\n\n\n（看起来很像 git 代码托管平台的步骤）\n\n这时访问链接也终于更换为：https://`你自己设置的域名`\n进阶美化\n截图：\n\n\n\n以下美化仅适用于 classic 主题。\n\n日志\n设置界面失效。还未修复。\n\n腾讯云的函数界面中找到函数代码，下方窗口中选择 theme 文件夹的 classic.php 。找到&lt;/head&gt;前的&lt;/style&gt;，在这行前面追加以下代码。然后点击保存即可。\n\n代码：\n1body&#123;background:#DBDBDB !important;color:#000;font-family:Google Sans !important;&#125;font&#123;margin:39.5%;color:#989898;text-align:center;&#125;a.login,body&gt;div&gt;li.operate&#123;transition:.3s;…input#upload_submit&#123;transition:.3s;border:none;border-radius:4px;background:#0000000d;padding:8px 11px;outline:none !important;&#125;input#upload_submit:hover&#123;background:#0088ff2e;color:#08f;&#125;form[method=&quot;post&quot;] table&#123;background:#ffffffb5;border-radius:4px;border:none;padding:10px;border-spacing:10px;margin-bottom:10px;&#125;form[method=&quot;post&quot;] td&#123;border:none;&#125;form[method=&quot;post&quot;] input,form[method=&quot;post&quot;] select&#123;transition:.3s;border:none;border-radius:4px;background:#0000000d;padding:8px 11px;outline:none !important;&#125;form[method=&quot;post&quot;] input[value=&quot;设置&quot;]&#123;background:#0088ff2e;color:#08f;&#125;\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/onedrive-scf/thumbnail.jpg","color":"#006fff","plink":"https://blog.cworld.top/post/onedrive-scf/"},{"title":"iChrome CSS 美化","date":"2019-07-24T05:58:40.000Z","date_formatted":{"ll":"2019年7月24日","L":"2019/07/24","MM-DD":"07-24"},"updated":"2024-02-13T08:08:44.107Z","content":"一个 Chrome 插件 iChrome，功能齐全，但是有广告，所以以下代码就是来美化插件并去除“牛皮藓”。\n\n\n使用方法\n在插件 iChrome 的设置中找到自定义 CSS 片段框，填入下面的内容，已经过浓缩处理。\n123456789101112131415.tab-container .tab&gt;.ad-unit.bottom&#123;display:none!important&#125;.store-detail .preview .widget, .widgets-container .widget&#123;background:#fffc;backdrop-filter:blur(20px)&#125;.store-detail .preview .widget .wtooltip, .widgets-container .widget .wtooltip&#123;display:none!important&#125;header.toolbar.floating .search input &#123;background:#fffc;backdrop-filter:blur(20px);box-shadow:0 2px 10px 0 #0000005e&#125;.store-detail .preview .widget .wdelete, .widgets-container .widget .wdelete&#123;color:black&#125;.feedback-link .icon&#123;display:none!important&#125;.bg-info&#123;right:10px;color:#fffc&#125;.add-widget-link&#123;color:#fffc;position:absolute&#125;.menu-toggle .menu-button:hover&#123;background-color:#fff&#125;.menu-toggle .menu-button:before&#123;color:black&#125;.menu-toggle .menu-button&#123;background-color:#fffc&#125;.add-widget-link .icon&#123;text-shadow: 0 0 0 #fff0&#125;button.material.fab&#123;background-color:#fffc&#125;.menu-container&#123;background:#fffc;backdrop-filter:blur(20px);box-shadow:0 0 0 0 #fff0&#125;.app.settings .page header&#123;background:#4080fe&#125;\n","plink":"https://blog.cworld.top/post/ichrome-css/"},{"title":"Pure 百度 - 质形色，始方圆","date":"2019-07-12T09:50:18.000Z","date_formatted":{"ll":"2019年7月12日","L":"2019/07/12","MM-DD":"07-12"},"updated":"2024-02-13T08:08:44.135Z","content":"介绍\n宣传图\n\n\n\n\n\n酷安链接\nCWorld\n写作说明\n好不好用自己用了才知道，6,266 行，183,413 字符，凝聚了多少个日夜的缠绵。\n它涵盖了大量百度的网页，从登录框到按钮，从扁平到质感，升华了多少设计师前沿的灵感。\n做出一款不管是强迫症，还是设计师，都能佩服舒心的主题，真的太难。\n我曾多次尝试扁平与质感的平衡，大量留白的舒心，用色彩块代替繁琐和带强烈割据感的线条…\n在一个被大众所摒弃的拟物化、随处可见的背景直接引用图片来简单模拟质感、改了大框架却连简单的链接、输入框、按钮都没有一丝一毫的修改、到现在都很少用上字体图标、单调到甚至没有任何动画、甚至推广满屏幕的陈旧的百度网页，搭建起一个全新的设计风格，这才是百度所应有的样子，独具一格，简约而现代…\n我使用了一些质感但不守旧的配色，轻简的质感阴影和鲜明的色块…\n百度的每一款产品都在属于它们本身的独特设计风格上，反复优化统一。\n完成进度\n已完成，欢迎体验。\n覆盖内容\n支持百度以下产品：\n搜索/文库/知道/网盘/百科/经验/翻译/地图/视频/新闻/学术/快照/糯米/风云榜/智能云/百家号/账户安全/个人中心/网址导航/千千静听\n链接\n电脑版 手机版\n使用方法\n支持软件\n\n\n支持电脑浏览器：\n支持插件的浏览器几乎都能支持\n\n\n支持手机浏览器：\nFirefox、Kiwi Broswer、Via\n\n\n由于 Via 还没有研究好，添加后不生效，所以暂时不介绍这种，如果有会折腾的可以告诉我\n支持插件\n\nUserscript：油猴脚本 Tampermonkey，ODM Sandbox 等\nCSS：Stylish，Stylus 等\n\n步骤\n\n\n下载上述插件任意一个，建议 Stylish（方便日后更新）。\n\n\n\n点击上述 Pure 百度的网址。\n\n\n\n如果你用的 CSS 类，直接点击蓝色的“Install Style”，即可生效（如果没有看到，说明可能你的第一步没有完成）。\n\n如果你用的 Userscript 类，网页下翻后点击蓝色小字“Install style as userscript”即可（这种方法甚至可以在不进行第一步的操作下进行）。\n\n\n\n新增\n自定义选项\n\n推荐\n感谢一下推荐 Pure 百度的网友们：\n[你从未见过的全新百度！PURE 纯净百度安装教程](https://www.bilibili.com/video/av81381716/)\n作者：彬彬有礼的有礼\n日期：2019-12-31\n\n[这样搞百度！我是舒服了,你们随意 Pure 百度主题美化](https://www.yijingying.com/592.html)\n作者：Healer\n日期：2020-01-05\n\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/pure-baidu/thumbnail.jpg","color":"#dfe1e2","plink":"https://blog.cworld.top/post/pure-baidu/"},{"title":"免费 API 汇总","date":"2019-07-10T13:18:58.000Z","date_formatted":{"ll":"2019年7月10日","L":"2019/07/10","MM-DD":"07-10"},"updated":"2024-02-13T08:08:44.095Z","content":"企业\n汇总\ncsdn\nsegmentfault\n项目\n姬长信 API（稳定推荐）\nApi 简介\n接口太多，不列举了\nFree Api（全，稳定）\nApi 详情\n网友 木芽\nBing 日图接口\n木芽一言接口\n网友 Xiaohei\n主站\n随机接口\nBing 日图接口\n免费图床\n开源社区（全，不推荐）\n主站\n文档介绍\n接口预览\n网友 小灵冲\n图床\n风景随机图\n女神随机图\n影视随机图\n二次元随机图\n网友 墨天逸\n主站\n动漫 1\n动漫 2\n海外（访问速度较慢）\nUnsplash 随机（优质，加载慢）\n介绍\n1示例 https://source.unsplash.com/random/1920x1080?wallpapers\nLorempixel 随机\n介绍\n1示例 http://lorempixel.com/1920/1080/\nLorem Picsum（速度较快，有灰度或模糊功能）\n介绍\n1示例 https://picsum.photos/1920/1080 https://picsum.photos/1920/1080?blur=10\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/free-api/thumbnail.jpg","color":"#26303A","plink":"https://blog.cworld.top/post/free-api/"},{"title":"Markdown 语法与学习记录","date":"2019-07-10T13:18:58.000Z","date_formatted":{"ll":"2019年7月10日","L":"2019/07/10","MM-DD":"07-10"},"updated":"2024-02-13T08:08:44.107Z","content":"Markdown 是一种轻量级的「标记语言」\n\nGithub 版本\nMarkdown 是一种轻量级且易于使用的语法，用于为您的写作设计风格。 它包括的公约:\n1234567891011121314151617语法突出显示代码块# 标题 1## 标题 2### 标题 3- 项目符号- 清单1. 编号2. 清单**粗体** 和 _斜体_ 和 `代码` 文本[链接](网址) 和 ![图片](src)\n有关详细信息，请参阅 GitHub Flavored Markdown。\n\nSegmentFault 版本\n来自 SegmentFault\n基本技巧\n代码\n如果你只想高亮语句中的某个函数名或关键字，可以使用 function_name() 实现\n1`function_name()`\n通常编辑器根据代码片段适配合适的高亮方法，但你也可以用 ``` 包裹一段代码，并指定一种语言\n1⁢⁢`javascript $(document).ready(function () &#123; alert(&#x27;hello world&#x27;); &#125;); ⁢⁢`\n支持的语言：1c, abnf, accesslog, actionscript, ada, apache, applescript, arduino, armasm, asciidoc, aspectj, autohotkey, autoit, avrasm, awk, axapta, bash, basic, bnf, brainfuck, cal, capnproto, ceylon, clean, clojure, clojure-repl, cmake, coffeescript, coq, cos, cpp, crmsh, crystal, cs, csp, css, d, dart, delphi, diff, django, dns, dockerfile, dos, dsconfig, dts, dust, ebnf, elixir, elm, erb, erlang, erlang-repl, excel, fix, flix, fortran, fsharp, gams, gauss, gcode, gherkin, glsl, go, golo, gradle, groovy, haml, handlebars, haskell, haxe, hsp, htmlbars, http, hy, inform7, ini, irpf90, java, javascript, json, julia, kotlin, lasso, ldif, leaf, less, lisp, livecodeserver, livescript, llvm, lsl, lua, makefile, markdown, mathematica, matlab, maxima, mel, mercury, mipsasm, mizar, mojolicious, monkey, moonscript, n1ql, nginx, nimrod, nix, nsis, objectivec, ocaml, openscad, oxygene, parser3, perl, pf, php, pony, powershell, processing, profile, prolog, protobuf, puppet, purebasic, python, q, qml, r, rib, roboconf, rsl, ruby, ruleslanguage, rust, scala, scheme, scilab, scss, smali, smalltalk, sml, sqf, sql, stan, stata, step21, stylus, subunit, swift, taggerscript, tap, tcl, tex, thrift, tp, twig, typescript, vala, vbnet, vbscript, vbscript-html, verilog, vhdl, vim, x86asm, xl, xml, xquery, yaml, zephir\n也可以使用 4 空格缩进，再贴上代码，实现相同的的效果\n123def g(x):    yield from range(x, 0, -1)yield from range(x)\n如你不需要代码高亮，可以用下面的方法禁用：\n1⁢`nohighlight ⁢`\n标题\n文章内容较多时，可以用标题分段：\n1234567# 标题 1## 标题 2## 大标题### 小标题\n粗斜体\n123_斜体文本_ _斜体文本_**粗体文本** **粗体文本****_粗斜体文本_** **_粗斜体文本_**\n链接\n常用链接方法\n12文字链接 [链接名称](http://链接网址)网址链接 &lt;http://链接网址&gt;\n高级链接技巧\n123456这个链接用 1 作为网址变量 [Google][1].这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].然后在文档的结尾为变量赋值（网址）[1]: http://www.google.com/[yahoo]: http://www.yahoo.com/\n列表\n普通无序列表\n12345- 列表文本前使用 [减号+空格]* 列表文本前使用 [加号+空格]- 列表文本前使用 [星号+空格]\n普通有序列表\n1231. 列表前使用 [数字+空格]2. 我们会自动帮你添加数字3. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3\n列表嵌套\n\n列出所有元素：\n\n1234567891011121314151617    - 无序列表元素 A        1. 元素 A 的有序子列表    - 前面加四个空格2. 列表里的多段换行：   前面必须加四个空格，   这样换行，整体的格式不会乱3. 列表里引用：   &gt; 前面空一行   &gt; 仍然需要在 &gt; 前面加四个空格4. 列表里代码段：   ⁢`前面四个空格，之后按代码语法` 书写   ⁢```   或者这样直接空八个，引入代码块\n引用\n普通引用\n12&gt; 引用文本前使用 [大于号+空格]&gt; 折行可以不加，新起一行都要加上哦\n引用里嵌套引用\n12345&gt; 最外层引用&gt;&gt; &gt; 多一个 &gt; 嵌套一层引用&gt; &gt;&gt; &gt; &gt; 可以嵌套很多层\n引用里嵌套列表\n123&gt; - 这是引用里嵌套的一个列表&gt; - 还可以有子列表&gt;   - 子列表需要从 - 之后延后四个空格开始\n引用里嵌套代码块\n1234&gt;     同样的，在前面加四个空格形成代码块&gt;&gt; ⁢` . 或者使用 ⁢` 形成代码块&gt; ⁢```\n图片\n跟链接的方法区别在于前面加了个感叹号 !，这样是不是觉得好记多了呢？\n1![图片名称](http://图片网址)\n当然，你也可以像网址那样对图片网址使用变量\n1234这个链接用 1 作为网址变量 [Google][1].然后在文档的结尾位变量赋值（网址）[1]: http://www.google.com/logo.png\n换行\n如果另起一行，只需在当前行结尾加 2 个空格\n12在当前行的结尾加 2 个空格  这行就会新起一行\n如果是要起一个新段落，只需要空出一行即可。\n分隔符\n如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行：\n12345前面的段落---后面的段落\n高级技巧\n行内 HTML 元素\n目前只支持部分段内 HTML 元素效果，包括 &lt;kdb&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt; ，如\n键位显示\n1使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑\n代码块\n1使用 &lt;pre&gt;&lt;/pre&gt; 元素同样可以形成代码块\n粗斜体\n1&lt;b&gt; Markdown 在此处同样适用，如 _加粗_ &lt;/b&gt;\n符号转义\n如果你的描述中需要用到 markdown 的符号，比如 _ # * 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 \\_ \\# \\* 进行避免。\n12\\_不想这里的文本变斜体\\_\\*\\*不想这里的文本被加粗\\*\\*\n扩展\n支持 jsfiddle、gist、runjs、优酷视频，直接填写 url，在其之后会自动添加预览点击会展开相关内容。\n1234http://&#123;url*of_the_fiddle&#125;/embedded/[&#123;tabs&#125;/[&#123;style&#125;]]/https://gist.github.com/&#123;gist_id&#125;http://runjs.cn/detail/&#123;id&#125;http://v.youku.com/v_show/id*&#123;video_id&#125;.html\n公式\n当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：\n12345$$ x = &#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; \\over 2a&#125;. $$$$x \\href&#123;why-equal.html&#125;&#123;=&#125; y^2 + 1$$\n同时也支持 HTML 属性，如：\n12345$$ (x+1)^2 = \\class&#123;hidden&#125;&#123;(x+1)(x+1)&#125; $$$$(x+1)^2 = \\cssId&#123;step1&#125;&#123;\\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;$$\n\n补充\n删除线\n1~~删除线~~\nHtml 写法\n折叠块\n1&lt;details&gt;&lt;summary&gt;点击展开&lt;/summary&gt;它被隐藏了&lt;/details&gt;\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/markdown/thumbnail.jpg","color":"#B5C6DA","plink":"https://blog.cworld.top/post/markdown/"},{"title":"各国语言缩写","date":"2019-07-04T22:42:30.000Z","date_formatted":{"ll":"2019年7月4日","L":"2019/07/04","MM-DD":"07-04"},"updated":"2024-02-13T08:08:44.115Z","content":"鉴于经常要用这些，所以写出来，方便自己用。\n\n常见\n\n\n缩写\n语言\n\n\n\n\nen\n英国\n\n\nen-US\n英国 - 美国\n\n\nen-AU\n英国 - 澳洲\n\n\nzh-CN\n中国 - 中国\n\n\nzh-TW\n中国 - 台湾\n\n\nzh-HK\n中国 - 香港 SAR\n\n\nzh-MO\n中国 - 澳门 SAR\n\n\nja\n日本\n\n\nja-JP\n日本 - 日本\n\n\nko\n韩国\n\n\nko-KR\n韩国 - 韩国\n\n\nru\n俄国\n\n\nru-RU\n俄国 - 俄国\n\n\nfr\n法国\n\n\n\n汇总\n\n\n缩写\n语言\n\n\n\n\naf\n公用荷兰\n\n\naf-ZA\n公用荷兰 - 南非\n\n\nsq\n阿尔巴尼亚\n\n\nsq-AL\n阿尔巴尼亚 - 阿尔巴尼亚\n\n\nar\n阿拉伯\n\n\nar-DZ\n阿拉伯 - 阿尔及利亚\n\n\nar-BH\n阿拉伯 - 巴林\n\n\nar-EG\n阿拉伯 - 埃及\n\n\nar-IQ\n阿拉伯 - 伊拉克\n\n\nar-JO\n阿拉伯 - 约旦\n\n\nar-KW\n阿拉伯 - 科威特\n\n\nar-LB\n阿拉伯 - 黎巴嫩\n\n\nar-LY\n阿拉伯 - 利比亚\n\n\nar-MA\n阿拉伯 - 摩洛哥\n\n\nar-OM\n阿拉伯 - 阿曼\n\n\nar-QA\n阿拉伯 - 卡塔尔\n\n\nar-SA\n阿拉伯 - 沙特阿拉伯\n\n\nar-SY\n阿拉伯 - 叙利亚共和国\n\n\nar-TN\n阿拉伯 - 北非的共和国\n\n\nar-AE\n阿拉伯 - 阿拉伯联合酋长国\n\n\nar-YE\n阿拉伯 - 也门\n\n\nhy\n亚美尼亚\n\n\nhy-AM\n亚美尼亚 - 亚美尼亚\n\n\naz\n阿塞拜疆\n\n\naz-AZ-Cyrl\n阿塞拜疆(西里尔字母) - 阿塞拜疆\n\n\naz-AZ-Latn\n阿塞拜疆(拉丁文) - 阿塞拜疆\n\n\neu\n巴斯克\n\n\neu-ES\n巴斯克 - 巴斯克\n\n\nbe\n白俄罗斯\n\n\nbe-BY\n白俄罗斯 - 白俄罗斯\n\n\nbg\n保加利亚\n\n\nbg-BG\n保加利亚 -保加利亚\n\n\nca\n嘉泰罗尼亚\n\n\nca-ES\n嘉泰罗尼亚 -嘉泰罗尼亚\n\n\nzh-HK\n中国 - 香港 SAR\n\n\nzh-MO\n中国 - 澳门 SAR\n\n\nzh-CN\n中国 - 中国\n\n\nzh-CHS\n中国 (单一化)\n\n\nzh-SG\n中国 - 新加坡\n\n\nzh-TW\n中国 - 台湾\n\n\nzh-CHT\n中国 (传统)\n\n\nhr\n克罗埃西亚\n\n\nhr-HR\n克罗埃西亚 - 克罗埃西亚\n\n\ncs\n捷克\n\n\ncs-CZ\n捷克 - 捷克\n\n\nda\n丹麦文\n\n\nda-DK\n丹麦文 - 丹麦\n\n\ndiv\n马尔代夫\n\n\ndiv-MV\n马尔代夫 - 马尔代夫\n\n\nnl\n荷兰\n\n\nnl-BE\n荷兰 - 比利时\n\n\nnl-NL\n荷兰 - 荷兰\n\n\nen\n英国\n\n\nen-AU\n英国 - 澳洲\n\n\nen-BZ\n英国 - 伯利兹\n\n\nen-CA\n英国 - 加拿大\n\n\nen-CB\n英国 - 加勒比海\n\n\nen-IE\n英国 - 爱尔兰\n\n\nen-JM\n英国 - 牙买加\n\n\nen-NZ\n英国 - 新西兰\n\n\nen-PH\n英国 - 菲律宾共和国\n\n\nen-ZA\n英国 - 南非\n\n\nen-TT\n英国 - 千里达托贝哥共和国\n\n\nen-GB\n英国 - 英国\n\n\nen-US\n英国 - 美国\n\n\nen-ZW\n英国 - 津巴布韦\n\n\net\n爱沙尼亚\n\n\net-EE\n爱沙尼亚 - 爱沙尼亚\n\n\nfo\n法罗群岛\n\n\nfo-FO\n法罗群岛- 法罗群岛\n\n\nfa\n波斯\n\n\nfa-IR\n波斯 - 伊朗王国\n\n\nfi\n芬兰\n\n\nfi-FI\n芬兰 - 芬兰\n\n\nfr\n法国\n\n\nfr-BE\n法国 - 比利时\n\n\nfr-CA\n法国 - 加拿大\n\n\nfr-FR\n法国 - 法国\n\n\nfr-LU\n法国 - 卢森堡\n\n\nfr-MC\n法国 - 摩纳哥\n\n\nfr-CH\n法国 - 瑞士\n\n\ngl\n加利西亚\n\n\ngl-ES\n加利西亚 - 加利西亚\n\n\nka\n格鲁吉亚州\n\n\nka-GE\n格鲁吉亚州 - 格鲁吉亚州\n\n\nde\n德国\n\n\nde-AT\n德国 - 奥地利\n\n\nde-DE\n德国 - 德国\n\n\nde-LI\n德国 - 列支敦士登\n\n\nde-LU\n德国 - 卢森堡\n\n\nde-CH\n德国 - 瑞士\n\n\nel\n希腊\n\n\nel-GR\n希腊 - 希腊\n\n\ngu\n印度\n\n\ngu-IN\n印度 - 印度\n\n\nhe\n希伯来\n\n\nhe-IL\n希伯来 - 以色列\n\n\nhi\n北印度\n\n\nhi-IN\n北印度 - 印度\n\n\nhu\n匈牙利\n\n\nhu-HU\n匈牙利 - 匈牙利\n\n\nis\n冰岛\n\n\nis-IS\n冰岛的 - 冰岛\n\n\nid\n印尼\n\n\nid-ID\n印尼 - 印尼\n\n\nit\n意大利\n\n\nit-IT\n意大利 - 意大利\n\n\nit-CH\n意大利 - 瑞士\n\n\nja\n日本\n\n\nja-JP\n日本 - 日本\n\n\nkn\n卡纳达\n\n\nkn-IN\n卡纳达 - 印度\n\n\nkk\n哈萨克\n\n\nkk-KZ\n哈萨克 - 哈萨克\n\n\nkok\n印度\n\n\nkok-IN\n印度 - 印度\n\n\nko\n韩国\n\n\nko-KR\n韩国 - 韩国\n\n\nky\n哈萨克\n\n\nky-KZ\n哈萨克 - 哈萨克\n\n\nlv\n拉脱维亚\n\n\nlv-LV\n拉脱维亚 -拉脱维亚\n\n\nlt\n立陶宛\n\n\nlt-LT\n立陶宛 - 立陶宛\n\n\nmk\n马其顿\n\n\nmk-MK\n马其顿 - 马其顿\n\n\nms\n马来\n\n\nms-BN\n马来 - 汶莱\n\n\nms-MY\n马来 - 马来西亚\n\n\nmr\n马拉地\n\n\nmr-IN\n马拉地 - 印度\n\n\nmn\n蒙古\n\n\nmn-MN\n蒙古 - 蒙古\n\n\nno\n挪威\n\n\nnb-NO\n挪威 (Bokm?l) - 挪威\n\n\nnn-NO\n挪威 (Nynorsk)- 挪威\n\n\npl\n波兰\n\n\npl-PL\n波兰 - 波兰\n\n\npt\n葡萄牙\n\n\npt-BR\n葡萄牙 - 巴西\n\n\npt-PT\n葡萄牙 - 葡萄牙\n\n\npa\nPunjab\n\n\npa-IN\nPunjab -印度\n\n\nro\n罗马尼亚\n\n\nro-RO\n罗马尼亚 - 罗马尼亚\n\n\nru\n俄国\n\n\nru-RU\n俄国 - 俄国\n\n\nsa\n梵文\n\n\nsa-IN\n梵文 - 印度\n\n\nsr-SP-Cyrl\n塞尔维亚 (西里尔字母的) - 塞尔维亚共和国\n\n\nsr-SP-Latn\n塞尔维亚 (拉丁文) - 塞尔维亚共和国\n\n\nsk\n斯洛伐克\n\n\nsk-SK\n斯洛伐克 - 斯洛伐克\n\n\nsl\n斯洛文尼亚\n\n\nsl-SI\n斯洛文尼亚 - 斯洛文尼亚\n\n\nes\n西班牙\n\n\nes-AR\n西班牙 - 阿根廷\n\n\nes-BO\n西班牙 - 玻利维亚\n\n\nes-CL\n西班牙 - 智利\n\n\nes-CO\n西班牙 - 哥伦比亚\n\n\nes-CR\n西班牙 - 哥斯达黎加\n\n\nes-DO\n西班牙 - 多米尼加共和国\n\n\nes-EC\n西班牙 - 厄瓜多尔\n\n\nes-SV\n西班牙 - 萨尔瓦多\n\n\nes-GT\n西班牙 - 危地马拉\n\n\nes-HN\n西班牙 - 洪都拉斯\n\n\nes-MX\n西班牙 - 墨西哥\n\n\nes-NI\n西班牙 - 尼加拉瓜\n\n\nes-PA\n西班牙 - 巴拿马\n\n\nes-PY\n西班牙 - 巴拉圭\n\n\nes-PE\n西班牙 - 秘鲁\n\n\nes-PR\n西班牙 - 波多黎各\n\n\nes-ES\n西班牙 - 西班牙\n\n\nes-UY\n西班牙 - 乌拉圭\n\n\nes-VE\n西班牙 - 委内瑞拉\n\n\nsw\n斯瓦希里\n\n\nsw-KE\n斯瓦希里 - 肯尼亚\n\n\nsv\n瑞典\n\n\nsv-FI\n瑞典 - 芬兰\n\n\nsv-SE\n瑞典 - 瑞典\n\n\nsyr\n叙利亚\n\n\nsyr-SY\n叙利亚 - 叙利亚共和国\n\n\nta\n坦米尔\n\n\nta-IN\n坦米尔 - 印度\n\n\ntt\n俄国\n\n\ntt-RU\n俄国 - 俄国\n\n\nte\n泰卢固\n\n\nte-IN\n泰卢固 - 印度\n\n\nth\n泰国\n\n\nth-TH\n泰国 - 泰国\n\n\ntr\n土耳其\n\n\ntr-TR\n土耳其 - 土耳其\n\n\nuk\n乌克兰\n\n\nuk-UA\n乌克兰 - 乌克兰\n\n\nur\n乌尔都\n\n\nur-PK\n乌尔都 - 巴基斯坦\n\n\nuz\nUzbek\n\n\nuz-UZ-Cyrl\nUzbek(西里尔字母的) - 乌兹别克斯坦\n\n\nuz-UZ-Latn\nUzbek(拉丁文) - 乌兹别克斯坦\n\n\nvi\n越南\n\n\nvi-VN\n越南 - 越南\n\n\n","plink":"https://blog.cworld.top/post/national-language/"},{"title":"Xiaomi Redmi 4A (Rolex) 刷机集合","date":"2019-07-03T12:19:12.000Z","date_formatted":{"ll":"2019年7月3日","L":"2019/07/03","MM-DD":"07-03"},"updated":"2024-02-13T08:08:44.155Z","content":"主要是一些刷机包，也有一些已知的 xda 刷机集合贴\n\nXda-Developers\nXda 集合\n\nList of Redmi 4A (Rolex) Custom Roms\n\nXda 刷机包\n\n【9.0】【OFFICIAL】Resurrection Remix v7.0 【ROLEX】\nROM Download\n\nXda REC\n\n【PORT】【TWRP】【TREBLE】 OrangeFox Recovery Project 【R10.0】\nDownload\n\nXda 内核\n\n【ROLEX / RIVA】 【KERNEL】 【OREO / NOUGAT】 Infinity Kernel\nDownload\n\nAndroid File Host\nFile 集合\n\n\nDownloads for : Xiaomi Redmi 4A\nDeveloped By :AryanPatidar\nDownload\n\n\nDownloads for : Xiaomi Redmi 4A\nDeveloped By :MacTavishAO\nDownload\n\n\nFile 刷机包\n\n\nflyme_Redmi-4A_ycjeson_6.7.6.23R.zip\nDownload\n\n\nFlyme6_Nougat_AryanPatidar_BugFree_Final_ROLEX_HM4A_Redmi4A.zip\nDownload\nRedme.txt\nDownload\n\n\nRR-N-v5.8.5-20180414-rolex.zip\nDownload\n\n\nRR-O-v6.0.0-20180429-rolex-Unofficial.zip\nDownload\n\n\nRR-O-v6.1.0-20180625-riva-Unofficial.zip\nDownload\n\n\nHavoc-OS-201808dddd16-rolex-Test.zip\nDownload\n\n\nAospExtended-v5.8-rolex-20181017-1735-OFFICIAL.zip\nDownload\n\n\nFile 内核\n\n\nInfinityKernel V5.0.zip\nDownload\n\n\nInfinityKernel_Unified_V5.1F.zip\nDownload\n\n\nXtreme Kernel v3.1.zip\nDownload\n\n\nFile 海外版（秒解锁 BL）\n\nmiflash_unlock-en-2.3.803.10.zip\nDownload\n\n","plink":"https://blog.cworld.top/post/redmi-4a-list/"},{"title":"我的第一篇 • 个人网站存在的意义","date":"2019-06-14T16:24:38.000Z","date_formatted":{"ll":"2019年6月14日","L":"2019/06/14","MM-DD":"06-14"},"updated":"2024-02-13T08:08:44.095Z","content":"个人网站这个以前很时髦的名词正随着时间慢慢被人忘记，互联网的门槛越来越低，个人网站显然不再成为一个重要的入口。甚至连电脑都已经不是首选的上网平台了。\n那么现在还有必要为自己搭建个人网站吗？\n\n不是人人都有料\n不可否认的是，个人网站由于其具有一定的专业性，所以搭建它是要付出一定的成本的，不论是金钱上的还是时间上的。有成本付出就会有回报的期望。每个坚持写博的人背后肯定有它的动力在支撑，但是我看到的是越来越多的个人博主荒废了它当初付出成本来打理的网站。\n为什么？因为没有人看，一个人写有啥意思，如果只是写写笔记放到本地也可以，速度还更快。你既然选择了放到网上，那么心里肯定还是期望有读者的。但是理想是美好的，现实是残酷的，你写的那些东西就是没人看。\n你不是大明星\n为啥人家徐静蕾一篇文章写几个字“今天好困啊”之类的，就有好几万的评论。你辛辛苦苦码了好几千字，又是配图又是又是写诗，唯一的访问者却只有搜索引擎的爬虫。\n因为你不是 Big Boy ，而网上的访问者具有匿名性，他们基本上跟你生活毫无交集，他们也不关心你去了哪些地方，吃了啥东西。这些事情不能成为谈资，所以如果你希望在个人网站分享这类内容，我建议还是朋友圈，QQ 空间之类的地方比较好。起码还可以得到几个赞。\n专家不是这么好当的\n除了看看明星八卦，大多数网上的意见领袖都是各方面的专家，他们往往可以一呼百应。\n但我始终坚持认为，就算是伪专家也是有他的过人之处的，更不要说真正的大牛了。很多人喜欢写技术文章，但首先你个人是一个默默无闻的路人，即使突然脑袋开窍撸了一篇可称大神级的文章出来，也会被埋没在信息的海洋里。更何况这种情况出现的概率基本为零，大多数情况下一般人写出来的文章就是没啥料的，不具备可读性。\n而且现在还有各种各样的阅读平台，分享网站，以及垃圾站。你网站上的文章还没被爬到，就被他们抓走了，有点良心的还贴个来源链接，无良的直接连作者名都给你改了。\n个人网站如何经营\n这个标题一写出来，网上类似的文章一大把。但我不是从技术角度来讲，我首先要劝一些人放弃，如果你没有啥好写的东西，那还是放弃这个打算把。你把精力投入到微博，微信上可能效果还好些。\n你一定要有一些别人没有的东西\n如果你不是在某一方面浸淫多年特别擅长，那么要不然你帅的惊动 D 中央，要不然你特别有钱是个土豪。如果你说，我又没啥特长，长的也一般，也没啥钱，总之就是一个普通的路人，还有希望吗？\n我知道你肯定希望我说出“有”这个字来给你信心，但是真没有。因为大部分人都是这样，别人凭啥去看你？所以经营网站的第一步是经营自己，让自己能够出类拔萃。\n精心准备你的内容\n当然如果你是大明星可以忽略这一点，脑残粉们根本不会在乎您发了什么。。。\n内容是你制胜的关键，可以说在信息化同质严重的今天，内容的重要性不是降低而是升高了。有品位的内容往往能为你吸引来有价值的用户。在这个过程中你也可以获得不少成就感。\n内容的选材也很重要，你需要去了解读者喜欢什么样的内容，既然是公开发表的内容，你就应该照顾别人的想法，这并不是要你埋没个性，相反在内容的组织上展示你的个性才是体现出你闪光点的好办法。\n为什么你看到很多业界大神，总是喜欢写一些普及性的文章。但往往这类文章的点击率是最高的，因为大多数人需要这类文章，而怎么把这类文章写好也是需要挑战性的。深入浅出是一门技术活，很多人写着写着越来越晦涩难懂，不知道怎么样用浅显的道理表达出来。\n快速分享\n这一步反而是大多数人做的最好的，各种分享按钮，微博，朋友圈分发。这样非常好，可以为你带来固定的读者群，但对拓宽读者群体没有多大帮助，我个人觉得可以借助一些业内比较有影响力的分享渠道，当然前提是你的文章真的质量过硬，也要给别人带来好处。比如：\n\nv2ex.com\nsegmentfault.com\n\n值得注意的是，你不能把他们当成单纯的发广告的地方，这样会很快透支掉你的口碑。你需要用心经营你自己的品牌，多多形成双赢的局面，为别人网站也能带来干货。\n总结\n其实我本人并不是擅长此道的专家，但是因为对这一个圈子接触比较多所以有这些感受。我见过太多怀揣着梦想进入个人网站这个圈子的好少年了，但大多数因为没有认清现实而浪费了很多资源。我这片文章的目的并不可能让大家马上牛逼起来，但如果能让大家稍稍认清点现实，也不枉费我这么多口舌了。\n转载自 JoyQi’s Homepage 个人网站存在的意义\n","plink":"https://blog.cworld.top/post/first-article/"},{"title":"Hello World","date":"2019-06-14T16:24:38.000Z","date_formatted":{"ll":"2019年6月14日","L":"2019/06/14","MM-DD":"06-14"},"updated":"2024-02-13T08:08:44.103Z","content":"预置文档\n\n欢迎来到 Hexo ！这是你的第一篇文章。 有关详细信息，请查看 文档 。 如果您在使用 Hexo 时遇到任何问题，可以在 故障排除 中找到答案，或者您可以在 GitHub 上找到我。\n快速开始\n新建一篇文章\n1执行：$ hexo new &quot;My New Post&quot;\n详细信息: 写作\nRun server\n1执行：$ hexo server\n详细信息: 服务\n生成静态文件\n1执行：$ hexo generate\n详细信息: 生成\n部署到远程站点\n1执行：$ hexo deploy\n详细信息: 部署\nBash 文档\n命令：\n\n\n命令\n诠释\n\n\n\n\nclean\nRemove generated files and cache.\n\n\nconfig\nGet or set configurations.\n\n\ndeploy\nDeploy your website.\n\n\ngenerate\nGenerate static files.\n\n\nhelp\nGet help on a command.\n\n\ninit\nCreate a new Hexo folder.\n\n\nlist\nList the information of the site\n\n\nmigrate\nMigrate your site from other system to Hexo.\n\n\nnew\nCreate a new post.\n\n\npublish\nRender files with renderer plugins.\n\n\nserver\nStart the server.\n\n\nversion\nDisplay version information.\n\n\nGlobal Options:\n\n\nOptions\nComment\n\n\n\n\n–config\nSpecify config file instead of using _config.yml\n\n\n–cwd\nSpecify the CWD\n\n\n–debug\nDisplay all verbose messages in the terminal\n\n\n–draft\nDisplay draft posts\n\n\n–safe\nDisable all plugins and scripts\n\n\n–silent\nHide output on console\n\n\nFor more help, you can use ‘hexo help [command]’ for the detailed information\nor you can check the docs: docs\n","thumbnail":"https://cdn.cbd.int/cworld-blog@latest/post/hello-world/thumbnail.jpg","color":"#5273a0","plink":"https://blog.cworld.top/post/hello-world/"},{"title":"关于","date":"2019-06-22T19:36:45.000Z","date_formatted":{"ll":"2019年6月22日","L":"2019/06/22","MM-DD":"06-22"},"updated":"2024-02-13T08:08:44.159Z","content":"\n鸡汤金句努力加载中…\n\nDeveloper / Designer\nFull-time undergraduate student at the 🏫 Sounthwestern University. Mainly learns research big data science, front-end development and neural network learning.\n我的项目\n\nDotfiles: Personal Arch Linux dotfiles\nMatlab Learning: Some notes and code about learning Matlab\nJava Learning: Some notes and code about learning Java\nNeovim Config: Personal Neovim config files\nPaiGram: Telegram robot, query the official Genshin information\nBusiness Data Analysis | Website: Using python and jupyter notebook to analyze the data of electrical appliances, and then using the data to predict the sales of electrical appliances\nFluent Mail: A program to send and recieve emails with attachments supported by C++, Qt and SQL\nKinect Camera Netural: An AI program that using Kinect camera and shows netural network and human skeleton.\nData Analysis Learning | Website: Some notes and code about learning Data Analysis\nDatabase Learning | Website: Some notes and code about learning Database\nComputer Network Learning | Website: Some notes and code about learning Computer Network\n\n以及一些更早的项目\nLinux Learning | Website: Some notes and code about learning Linux\nR Learning | Website: Some notes and code about learning R language\nPure Bing &amp; Material You | Website: Bing search page beautification module\nVue Learning: Some notes and code about learning Vue\nC Learning: Some notes and code about learning C language\nPure Baidu: Baidu search page beautification module\nMomotap | Website: A mainland China friendly version extracted from Momotap\n\nGithub Activities:\n\n泛泛而谈\n\n最喜欢的编辑器是 Neovim 和 VSCode（偶尔也会用 Sublime Text）。\nAdobe 全家桶比较熟练，UI 强迫症晚期。\n偏好音乐广泛，日语、电音、小众国语、小语种都有。习惯用 Apple Music 在线随机拨歌，偶尔也用用网易云。\n常玩原神、崩坏三和音游。腾讯网易游戏至今未实名。\n\n以及更多\n精通 Python，PHP，C++，Java，Typescipt，Go 等语言的拼写。\n熟悉 Windows、Linux、MacOS 开关机操作。\n能熟练操作 Office 全套的打开方式。\n\n天罗地网\n我的一些常见的社交平台：\n\n\n\n\n\n\nGithub\nFollows：加载中…\n\n\n\n\n\n\nTelegram\nFollows：加载中…\n\n\n\n\n\n\nCoolapk\n粉丝数：6402\n\n\n\n\n\n\nBilibili\n粉丝数：加载中…\n\n\n\n\n\n\nTwitter\nFollows：31\n\n\n\n\n\n\nWeibo\n粉丝数：加载中…\n\n\n\n\n\n\nZhihu\n粉丝数：6\n\n\n\n\n\n\nSteam\n游戏数量：加载中…\n\n\n\n\nDisplay real-time; powered by Substats\n\n网名主要有 CWorld，CWorld0，CWorld1。\n闲言碎语\n为什么叫 CWorld？CWorld 原名其实是叫 ChangingWorld，“C”作为程序界高级语言的元老-- C 语言，同样也是疯狂的首字母，是对计算机领域锲而不舍精神的支持希望。而 ChangingWorld 则是说变迁世界，我却不随大流，做自己，做独特。（编的真的非常有意义呢）\n好奇都在玩些什么音游?音游圈子的游戏差不多也都尝试过一圈。经常玩的有 Lanota，Musedash，Cytus II，Rhythm Doctor 等。\n偶尔玩玩阳春白雪和 Phigros。不过因为平板内存不够玩了又卸载倒是常事了。\n发电赞助\n赞助后请留言或者主动联系我谢谢。在此感谢以下捐助者：\n\n\n捐助者\n金额\n日期\n\n\n\n\nC*a（酷安@暴走の蜗牛）\n2.00\n2019-07-02\n\n\n华雄(QQ：1300****71)\n5.00\n2019-12-30\n\n\n◌(QQ：1934****45)\n3.00\n2019-12-30\n\n\n匿名\n20.00\n2022-04-06\n\n\n关于博客\n\n2019-06-14 小站在这个时间点发芽，开始使用 Hexo 搭建博客\n2019-07-08 小站在 Gitee 上部署了第一个版本\n2019-07-31 买下了人生第一个域名 cworld.top\n2020-01-24 小站搬迁至 Coding，从此绑定了域名 blog.cworld.top\n2022-02-12 小站搬迁至 Netlify，并在 Github 上开源\n2022-03-01 小站成功签约了并加入了 十年之约\n\n小站的平稳运行和个性化定制也离不开以下优秀项目/服务商提供的资源和技术上的支持：\n\n网站域名：cworld.top\n框架主题：Hexo + Inside theme\n网站托管：Netlify、GitHub Pages\n资源加速：CBD CDN\n评论系统：Waline\n持续集成：Github Actions\n访问统计：LeanCloud + Waline、自建不蒜子 API\n其他统计：Substats、Circle of friends\n\n\n","plink":"https://blog.cworld.top/about/"},{"title":"友链","date":"2019-06-23T15:26:17.000Z","date_formatted":{"ll":"2019年6月23日","L":"2019/06/23","MM-DD":"06-23"},"updated":"2024-02-13T08:08:44.159Z","content":"\n怎么可能有顺序呢，当然是随机的~\n\n稍等片刻，好友马上加载出来！\n\n不太活跃的博客\n稍等片刻，好友马上加载出来！\n\n友链记录册\n2020-07-09 蒟蒻の BLOG 离开\n2020-07-09 Vexsy 离开\n2020-07-07 Raaynk’s Blog 消失\n2020-07-07 冬马的白色相簿 回归\n2021-02-22 半叶子 离开\n2021-02-22 冬马的白色相簿 消失\n2021-02-02 Heven Kin 回归\n2022-02-13 理工小天使 消失\n2022-02-13 自由灵的梦境 消失\n2022-02-13 冬马のホワイトアルバム 消失\n2022-02-13 Sansui 消失\n2022-09-01 椎咲良田 消失\n2022-09-01 木子の Blog 离开\n2022-09-01 LanYun の Blog 消失\n2022-09-01 Wittoy's Blog 消失\n2022-09-05 东方幻梦 离开\n2022-09-05 绎梦机 离开\n2022-11-09 一叶竹 消失\n2022-11-23 KD's Blog 消失\n2022-02-13 LanYun の Blog 回归\n2022-12-14 KD 的网络小屋 回归\n2023-02-09 L1nSn0w’s Blog 消失\n2023-02-09 鲨鱼辣椒 消失\n2023-02-09 Jinlk's blog 消失\n2023-02-09 L1nSn0w’s Blog 回归\n2023-03-01 NEKO#ΦωΦ 消失\n2023-04-25 Barkure 消失\n2023-04-25 KD 的网络小屋 消失\n2023-06-13 LyShark - 孤风洗剑 消失\n2023-06-13 Ojhdt’s Blog 消失\n2023-06-13 Barkure 消失\n2023-06-13 七云's Blog 消失\n2023-10-24 Enjoy's blog 消失\n2023-10-24 Wayne's Blog 消失\n2023-10-24 七云's Blog 回归\n\n朋友们的最新文章\n努力加载ing...\n特殊链接\n\n稍等片刻，好友马上加载出来！\n\n申请友链\n本站信息如下：\n\n名称：CWorld’s Blog\n简介：求知若愚，虚怀若谷\n链接：https://blog.cworld.top/\n图标：https://cravatar.cn/avatar/1ffe42aa45a6b1444a786b1f32dfa8aa?s=200\n\n申请时还请按照这个模板留言（提交 PR 或许也是个更快的办法）。此外有关申请说明：\n\n在你的友链上添加了本站；\n请确保你的站点活着；\n博客内容不违反国家法律。\n\n那么，在下方留言吧 👇\n\n\n\n\n    let UserConfig = {\n        // 填写你的api地址\n        private_api_url: 'https://links.cworld.top/',\n        // 初始加载几篇文章\n        page_init_number: 10,\n        // 点击加载更多时，一次最多加载几篇文章，默认10\n        page_turning_number: 10,\n        // 头像加载失败时，默认头像地址\n        error_img: 'https://cravatar.cn/avatar/57d8260dfb55501c37dde588e7c3852c',\n        // 进入页面时第一次的排序规则\n        sort_rule: 'created',\n        // 本地文章缓存数据过期时间（天）\n        expire_days: 1, \n    }\n\n","plink":"https://blog.cworld.top/link/"}]